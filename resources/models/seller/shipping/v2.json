{
    "openapi": "3.0.1",
    "info": {
        "title": "Amazon Shipping API",
        "description": "The Amazon Shipping API is designed to support outbound shipping use cases both for orders originating on Amazon-owned marketplaces as well as external channels/marketplaces. With these APIs, you can request shipping rates, create shipments, cancel shipments, and track shipments.",
        "contact": {
            "name": "Amazon Shipping API Support",
            "email": "swa-api-core@amazon.com"
        },
        "license": {
            "name": "Amazon Software License",
            "url": "https://aws.amazon.com/asl/"
        },
        "version": "v2"
    },
    "servers": [
        {
            "url": "https://sellingpartnerapi-eu.amazon.com/"
        }
    ],
    "paths": {
        "/shipping/v2/shipments/rates": {
            "post": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "Returns the available shipping service offerings.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "getRates",
                "parameters": [
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    },
                    {
                        "required": false
                    }
                ],
                "requestBody": {
                    "description": "GetRatesRequest body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetRatesRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetRatesResponse"
                                },
                                "example": {
                                    "requestToken": "6DCCEDD3FF961C15FEB94F342D41C",
                                    "rates": [
                                        {
                                            "rateId": "F4B68849F969E239FF9FCA9C12E35",
                                            "carrierId": "FOOSHIPGRD",
                                            "carrierName": "FOO SHIP GRD",
                                            "billedWeight": {
                                                "value": 5,
                                                "unit": "GRAMS"
                                            },
                                            "totalCharge": {
                                                "value": 7,
                                                "unit": "USD"
                                            },
                                            "serviceId": "FOORSID",
                                            "serviceName": "FOO RS ID",
                                            "promise": {
                                                "deliveryWindow": {
                                                    "start": "2018-08-24T08:22:30.737Z",
                                                    "end": "2018-08-24T20:22:30.737Z"
                                                },
                                                "pickupWindow": {
                                                    "start": "2018-08-23T08:22:30.737Z",
                                                    "end": "2018-08-23T20:22:30.737Z"
                                                }
                                            },
                                            "supportedDocumentSpecifications": [
                                                {
                                                    "format": "PNG",
                                                    "size": {
                                                        "length": 6,
                                                        "width": 4,
                                                        "unit": "INCH"
                                                    },
                                                    "printOptions": [
                                                        {
                                                            "supportedDPIs": [
                                                                300,
                                                                203
                                                            ],
                                                            "supportedPageLayouts": [
                                                                "LEFT",
                                                                "RIGHT"
                                                            ],
                                                            "supportedFileJoiningOptions": [
                                                                true,
                                                                false
                                                            ],
                                                            "supportedDocumentDetails": [
                                                                {
                                                                    "name": "LABEL",
                                                                    "isMandatory": true
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                },
                                                {
                                                    "format": "ZPL",
                                                    "size": {
                                                        "length": 6,
                                                        "width": 4,
                                                        "unit": "INCH"
                                                    },
                                                    "printOptions": [
                                                        {
                                                            "supportedDPIs": [
                                                                300,
                                                                203
                                                            ],
                                                            "supportedPageLayouts": [
                                                                "LEFT",
                                                                "RIGHT"
                                                            ],
                                                            "supportedFileJoiningOptions": [
                                                                true,
                                                                false
                                                            ],
                                                            "supportedDocumentDetails": [
                                                                {
                                                                    "name": "LABEL",
                                                                    "isMandatory": true
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ],
                                            "availableValueAddedServiceGroups": [
                                                {
                                                    "groupId": "SIG_VERIFICATION",
                                                    "groupDescription": "Signature Verification",
                                                    "isRequired": true,
                                                    "valueAddedServices": [
                                                        {
                                                            "id": "CUST_SIG_VERIFICATION",
                                                            "name": "Customer Signature Verification",
                                                            "cost": {
                                                                "unit": "USD",
                                                                "value": 2
                                                            }
                                                        }
                                                    ]
                                                }
                                            ],
                                            "requiresAdditionalInputs": false,
                                            "rateItemList": [
                                                {
                                                    "rateItemCharge": {
                                                        "unit": "INR",
                                                        "value": "2.00000"
                                                    },
                                                    "rateItemID": "BASE_RATE",
                                                    "rateItemNameLocalization": "Base Rate",
                                                    "rateItemType": "MANDATORY"
                                                },
                                                {
                                                    "rateItemCharge": {
                                                        "unit": "INR",
                                                        "value": "1.20000"
                                                    },
                                                    "rateItemID": "DELIVERY_CONFIRMATION",
                                                    "rateItemNameLocalization": "Delivery Confirmation",
                                                    "rateItemType": "INCLUDED"
                                                },
                                                {
                                                    "rateItemCharge": {
                                                        "unit": "INR",
                                                        "value": "2.00"
                                                    },
                                                    "rateItemID": "VAT",
                                                    "rateItemNameLocalization": "VAT",
                                                    "rateItemType": "MANDATORY"
                                                }
                                            ],
                                            "paymentType": "PAY_THROUGH_AMAZON",
                                            "benefits": {
                                                "includedBenefits": [],
                                                "excludedBenefits": [
                                                    {
                                                        "benefit": "CLAIMS_PROTECTED",
                                                        "reasonCodes": [
                                                            "LATE_DELIVERY_RISK"
                                                        ]
                                                    }
                                                ]
                                            }
                                        }
                                    ],
                                    "ineligibleRates": [
                                        {
                                            "carrierId": "FOOSTDGRD",
                                            "serviceId": "FOO8420430",
                                            "carrierName": "FOOSTDGRD",
                                            "serviceName": "FOO8420430",
                                            "ineligibilityReasons": [
                                                {
                                                    "code": "NO_COVERAGE",
                                                    "message": "Required shipping network coverage doesn't exist for the offering"
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "ChannelDetails object cannot be null"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-amzn-api-sandbox": {
                    "dynamic": {}
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/shipping/v2/shipments/directPurchase": {
            "post": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "Purchases the shipping service for a shipment using the best fit service offering. Returns purchase related details and documents.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "directPurchaseShipment",
                "parameters": [
                    {
                        "name": "x-amzn-IdempotencyKey",
                        "in": "header",
                        "description": "A unique value which the server uses to recognize subsequent retries of the same request.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "locale",
                        "in": "header",
                        "description": "The IETF Language Tag. Note that this only supports the primary language subtag with one secondary language subtag (i.e. en-US, fr-CA).\nThe secondary language subtag is almost always a regional designation.\nThis does not support additional subtags beyond the primary and secondary language subtags.\n",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "requestBody": {
                    "description": "DirectPurchaseRequest body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/DirectPurchaseRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-IdempotencyKey": {
                                "description": "A unique value which the server uses to recognize subsequent retries of the same request.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/DirectPurchaseResponse"
                                },
                                "example": {
                                    "shipmentId": "445454-3232-3232",
                                    "packageDocumentDetailList": [
                                        {
                                            "packageClientReferenceId": "ASUSDI-45343854",
                                            "trackingId": "T1234567",
                                            "packageDocuments": [
                                                {
                                                    "type": "LABEL",
                                                    "format": "PNG",
                                                    "contents": ""
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "ChannelDetails object cannot be null"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-amzn-api-sandbox": {
                    "dynamic": {}
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/shipping/v2/shipments": {
            "post": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "Purchases a shipping service and returns purchase related details and documents.\n\nNote: You must complete the purchase within 10 minutes of rate creation by the shipping service provider. If you make the request after the 10 minutes have expired, you will receive an error response with the error code equal to \"TOKEN_EXPIRED\". If you receive this error response, you must get the rates for the shipment again.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "purchaseShipment",
                "parameters": [
                    {
                        "name": "x-amzn-IdempotencyKey",
                        "in": "header",
                        "description": "A unique value which the server uses to recognize subsequent retries of the same request.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ],
                        "required": false
                    }
                ],
                "requestBody": {
                    "description": "PurchaseShipmentRequest body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PurchaseShipmentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PurchaseShipmentResponse"
                                },
                                "example": {
                                    "shipmentId": "87852211788104",
                                    "packageDocumentDetails": [
                                        {
                                            "packageClientReferenceId": "abcd",
                                            "packageDocuments": [
                                                {
                                                    "type": "LABEL",
                                                    "format": "PNG",
                                                    "contents": "sdioadaiosfhdodsaiufhouafhoudfhdouahfac=="
                                                }
                                            ],
                                            "trackingId": 1578648261977
                                        }
                                    ],
                                    "promise": {
                                        "pickupWindow": {
                                            "start": "2019-12-11T07:09:05.513Z",
                                            "end": "2019-12-11T09:09:05.513Z"
                                        },
                                        "deliveryWindow": {
                                            "start": "2019-12-13T07:09:05.513Z",
                                            "end": "2019-12-13T09:09:05.513Z"
                                        }
                                    },
                                    "benefits": {
                                        "includedBenefits": [
                                            "CLAIMS_PROTECTED"
                                        ],
                                        "excludedBenefits": []
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "RateId cannot be null"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-amzn-api-sandbox": {
                    "dynamic": {}
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/shipping/v2/oneClickShipment": {
            "post": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "Purchases a shipping service identifier and returns purchase-related details and documents.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "oneClickShipment",
                "parameters": [
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    },
                    {
                        "required": false
                    }
                ],
                "requestBody": {
                    "description": "OneClickShipmentRequest body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OneClickShipmentRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/OneClickShipmentResponse"
                                },
                                "example": {
                                    "shipmentId": "87852211788104",
                                    "packageDocumentDetails": [
                                        {
                                            "packageClientReferenceId": "#abcd",
                                            "packageDocuments": [
                                                {
                                                    "type": "LABEL",
                                                    "format": "PNG",
                                                    "contents": "sdioadaiosfhdodsaiufhouafhoudfhdouahfac=="
                                                }
                                            ],
                                            "trackingId": 1578648261977
                                        }
                                    ],
                                    "promise": {
                                        "pickupWindow": {
                                            "start": "2019-12-11T07:09:05.513Z",
                                            "end": "2019-12-11T09:09:05.513Z"
                                        },
                                        "deliveryWindow": {
                                            "start": "2019-12-13T07:09:05.513Z",
                                            "end": "2019-12-13T09:09:05.513Z"
                                        }
                                    },
                                    "carrier": {
                                        "id": "AMZN_UK",
                                        "name": "Amazon Shipping"
                                    },
                                    "service": {
                                        "id": "SWA-UK-PREM",
                                        "name": "Amazon Shipping One Day"
                                    },
                                    "totalCharge": {
                                        "unit": "GBP",
                                        "value": 4.76
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "ServiceId cannot be null"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-amzn-api-sandbox": {
                    "dynamic": {}
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/shipping/v2/tracking": {
            "get": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "Returns tracking information for a purchased shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "getTracking",
                "parameters": [
                    {
                        "name": "trackingId",
                        "in": "query",
                        "description": "A carrier-generated tracking identifier originally returned by the purchaseShipment operation.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "carrierId",
                        "in": "query",
                        "description": "A carrier identifier originally returned by the getRates operation for the selected rate.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetTrackingResponse"
                                },
                                "example": {
                                    "trackingId": "23AA47DE2B3B6",
                                    "alternateLegTrackingId": "null",
                                    "eventHistory": [
                                        {
                                            "eventCode": "Undeliverable",
                                            "location": {
                                                "postalCode": "EX33 2JL",
                                                "countryCode": "GB"
                                            },
                                            "eventTime": "2024-02-11T07:09:05.513Z",
                                            "shipmentType": "FORWARD"
                                        },
                                        {
                                            "eventCode": "ReturnInitiated",
                                            "location": {
                                                "postalCode": "EX33 2JL",
                                                "countryCode": "GB"
                                            },
                                            "eventTime": "2024-02-12T09:09:05.513Z",
                                            "shipmentType": "RETURNS"
                                        },
                                        {
                                            "eventCode": "Delivered",
                                            "location": {
                                                "postalCode": "EX33 2JL",
                                                "countryCode": "GB"
                                            },
                                            "eventTime": "2024-02-13T04:09:05.513Z",
                                            "shipmentType": "RETURNS"
                                        }
                                    ],
                                    "promisedDeliveryDate": "2024-02-12T13:09:05.513Z",
                                    "summary": {
                                        "status": "Delivered",
                                        "trackingDetailCodes": {
                                            "forward": [
                                                "Rejected",
                                                "Damaged"
                                            ],
                                            "returns": [
                                                "Signed"
                                            ]
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "CarrierId is missing in the request"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-amzn-api-sandbox": {
                    "dynamic": {}
                }
            }
        },
        "/shipping/v2/shipments/{shipmentId}/documents": {
            "get": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "Returns the shipping documents associated with a package in a shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "getShipmentDocuments",
                "parameters": [
                    {
                        "name": "shipmentId",
                        "in": "path",
                        "description": "The shipment identifier originally returned by the purchaseShipment operation.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "packageClientReferenceId",
                        "in": "query",
                        "description": "The package client reference identifier originally provided in the request body parameter for the getRates operation.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "format",
                        "in": "query",
                        "description": "The file format of the document. Must be one of the supported formats returned by the getRates operation.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "dpi",
                        "in": "query",
                        "description": "The resolution of the document (for example, 300 means 300 dots per inch). Must be one of the supported resolutions returned in the response to the getRates operation.",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    },
                    {
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetShipmentDocumentsResponse"
                                },
                                "example": {
                                    "shipmentId": "445454-3232-3232",
                                    "packageDocumentDetail": {
                                        "packageClientReferenceId": "ASUSDI-45343854",
                                        "trackingId": "T1234567",
                                        "packageDocuments": [
                                            {
                                                "type": "LABEL",
                                                "format": "PNG",
                                                "contents": "sdioadaiosfhdodsaiufhouafhoudfhdouahfac=="
                                            }
                                        ],
                                        "benefits": {
                                            "includedBenefits": [
                                                "CLAIMS_PROTECTED"
                                            ],
                                            "excludedBenefits": []
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "shipmentId is missing in the request"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-amzn-api-sandbox": {
                    "dynamic": {}
                }
            }
        },
        "/shipping/v2/shipments/{shipmentId}/cancel": {
            "put": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "Cancels a purchased shipment. Returns an empty object if the shipment is successfully cancelled.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "cancelShipment",
                "parameters": [
                    {
                        "name": "shipmentId",
                        "in": "path",
                        "description": "The shipment identifier originally returned by the purchaseShipment operation.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    },
                    {
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CancelShipmentResponse"
                                },
                                "example": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "ShipmentId cannot be null"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-amzn-api-sandbox": {
                    "dynamic": {}
                }
            }
        },
        "/shipping/v2/shipments/additionalInputs/schema": {
            "get": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "Returns the JSON schema to use for providing additional inputs when needed to purchase a shipping offering. Call the getAdditionalInputs operation when the response to a previous call to the getRates operation indicates that additional inputs are required for the rate (shipping offering) that you want to purchase.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "getAdditionalInputs",
                "parameters": [
                    {
                        "name": "requestToken",
                        "in": "query",
                        "description": "The request token returned in the response to the getRates operation.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "rateId",
                        "in": "query",
                        "description": "The rate identifier for the shipping offering (rate) returned in the response to the getRates operation.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAdditionalInputsResponse"
                                },
                                "example": {
                                    "payload": {
                                        "$schema": "http://json-schema.org/draft-04/schema#",
                                        "title": "Additional inputs for Shipping Offering",
                                        "type": "object",
                                        "properties": {
                                            "harmonizedSystemCode": {
                                                "type": "string",
                                                "description": "Harmonized System's commodity code for an item."
                                            },
                                            "packageClientReferenceId": {
                                                "type": "string",
                                                "description": "Unique identifier for the item."
                                            }
                                        }
                                    }
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "requestToken": {
                                                "value": "amzn1.rq.123456789.101"
                                            },
                                            "rateId": {
                                                "value": "122324234543535321345436534321423423523452345"
                                            }
                                        }
                                    },
                                    "response": {
                                        "payload": {}
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "RequestToken cannot be null"
                                        }
                                    ]
                                }
                            }
                        },
                        "x-amzn-api-sandbox": {
                            "static": [
                                {
                                    "request": {
                                        "parameters": {
                                            "requestToken": {
                                                "value": "null"
                                            },
                                            "rateId": {
                                                "value": "2314346237423894905834905890346890789075"
                                            }
                                        }
                                    },
                                    "response": {
                                        "errors": [
                                            {
                                                "code": "InvalidRequest",
                                                "message": "Request is missing or has invalid parameters",
                                                "details": "RequestToken cannot be null"
                                            }
                                        ]
                                    }
                                }
                            ]
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipping/v2/carrierAccountFormInputs": {
            "get": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "This API will return a list of input schema required to register a shipper account with the carrier. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "getCarrierAccountFormInputs",
                "parameters": [
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCarrierAccountFormInputsResponse"
                                },
                                "example": {
                                    "linkableCarriers": [
                                        {
                                            "carrierId": "FedEx",
                                            "linkableAccountTypes": [
                                                {
                                                    "accountTypeId": "",
                                                    "carrierAccountInputs": [
                                                        {
                                                            "descriptionLocalizationKey": "accountNumberDescriptionString",
                                                            "inputType": "TEXTBOX",
                                                            "isConfidential": true,
                                                            "isHidden": false,
                                                            "isMandatory": true,
                                                            "name": "ACCOUNT_NUMBER",
                                                            "validationMetadata": [
                                                                {
                                                                    "errorMessage": "stringId4",
                                                                    "validationStrategy": "MIN_LENGTH",
                                                                    "value": "5"
                                                                },
                                                                {
                                                                    "errorMessage": "stringId5",
                                                                    "validationStrategy": "MAX_LENGTH",
                                                                    "value": "35"
                                                                }
                                                            ]
                                                        }
                                                    ]
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "RequestToken cannot be null"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipping/v2/carrierAccounts": {
            "put": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "This API will return Get all carrier accounts for a merchant. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "getCarrierAccounts",
                "parameters": [
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "requestBody": {
                    "description": "GetCarrierAccountsRequest body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetCarrierAccountsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCarrierAccountsResponse"
                                },
                                "example": {
                                    "activeAccounts": [
                                        {
                                            "accountId": "90613e4-dcf6-4c3e-bc57-45005580",
                                            "carrierId": "FedEx"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "RequestToken cannot be null"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/shipping/v2/carrierAccounts/{carrierId}": {
            "put": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "This API associates/links the specified carrier account with the merchant. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "updateLinkedCarrierAccount",
                "parameters": [
                    {
                        "name": "carrierId",
                        "in": "path",
                        "description": "An identifier for the carrier with which the seller's account is being linked.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Espain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Espain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "requestBody": {
                    "description": "LinkCarrierAccountRequest body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkCarrierAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LinkCarrierAccountResponse"
                                },
                                "example": {
                                    "registrationStatus": "ACTIVE",
                                    "accountId": "90613e4-dcf6-4c3e-bc57-45005580"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "Provided input is invalid. Please verify."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            },
            "post": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "This API associates/links the specified carrier account with the merchant. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 5 | 10 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "linkCarrierAccount",
                "parameters": [
                    {
                        "name": "carrierId",
                        "in": "path",
                        "description": "An identifier for the carrier with which the seller's account is being linked.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "requestBody": {
                    "description": "LinkCarrierAccountRequest body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LinkCarrierAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LinkCarrierAccountResponse"
                                },
                                "example": {
                                    "registrationStatus": "ACTIVE",
                                    "accountId": "90613e4-dcf6-4c3e-bc57-45005580"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "Provided input is invalid. Please verify."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-amzn-api-sandbox": {
                    "dynamic": {}
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/shipping/v2/carrierAccounts/{carrierId}/unlink": {
            "put": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "This API Unlink the specified carrier account with the merchant. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "unlinkCarrierAccount",
                "parameters": [
                    {
                        "name": "carrierId",
                        "in": "path",
                        "description": "carrier Id to unlink with merchant.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "requestBody": {
                    "description": "UnlinkCarrierAccountRequest body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UnlinkCarrierAccountRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UnlinkCarrierAccountResponse"
                                },
                                "example": {
                                    "merchantId": "",
                                    "isUnlinked": true
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "RequestToken cannot be null"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/shipping/v2/collectionForms": {
            "post": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "This API  Call to generate the collection form. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "generateCollectionForm",
                "parameters": [
                    {
                        "name": "x-amzn-IdempotencyKey",
                        "in": "header",
                        "description": "A unique value which the server uses to recognize subsequent retries of the same request.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "requestBody": {
                    "description": "GenerateCollectionFormRequest body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GenerateCollectionFormRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GenerateCollectionFormResponse"
                                },
                                "example": {
                                    "collectionsFormDocument": {
                                        "base64EncodedContent": "VGhpcyBpcyBzb21lIHRleHQgdG8gY29udmVydCB2aWEgQ3J5cHQu",
                                        "documentFormat": "application/pdf"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "RequestToken cannot be null"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/shipping/v2/collectionForms/history": {
            "put": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "This API Call to get the history of the previously generated collection forms. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "getCollectionFormHistory",
                "parameters": [
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "requestBody": {
                    "description": "GetCollectionFormHistoryRequest body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetCollectionFormHistoryRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCollectionFormHistoryResponse"
                                },
                                "example": {
                                    "collectionFormsHistoryRecordList": [
                                        {
                                            "carrierName": "USPS",
                                            "creationDate": 1650163712052,
                                            "generationStatus": "COMPLETED",
                                            "collectionFormId": "2c631e32-2538-3431-889e-008b6f5a6f11",
                                            "shipFromAddress": "<**-redacted-**>"
                                        }
                                    ],
                                    "lastRefreshedDate": "April 17 2022 06:20 PM PDT"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "RequestToken cannot be null"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/shipping/v2/unmanifestedShipments": {
            "put": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "This API Get all unmanifested carriers with shipment locations. Any locations which has unmanifested shipments\n        with an eligible carrier for manifesting shall be returned. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "getUnmanifestedShipments",
                "parameters": [
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "requestBody": {
                    "description": "GetUmanifestedShipmentsRequest body",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/GetUnmanifestedShipmentsRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetUnmanifestedShipmentsResponse"
                                },
                                "example": {
                                    "unmanifestedCarrierInformationList": [
                                        {
                                            "carrierId": "USPS",
                                            "carrierName": "USPS",
                                            "unmanifestedShipmentLocationList": [
                                                {
                                                    "address": "<**-redacted-**>",
                                                    "lastManifestDate": 1650163712052
                                                }
                                            ]
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "RequestToken cannot be null"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/shipping/v2/collectionForms/{collectionFormId}": {
            "get": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "This API reprint a collection form. \n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "getCollectionForm",
                "parameters": [
                    {
                        "name": "collectionFormId",
                        "in": "path",
                        "description": "collection form Id to reprint a collection.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetCollectionFormResponse"
                                },
                                "example": {
                                    "collectionsFormDocument": {
                                        "base64EncodedContent": "VGhpcyBpcyBzb21lIHRleHQgdG8gY29udmVydCB2aWEgQ3J5cHQu",
                                        "documentFormat": "application/pdf"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "RequestToken cannot be null"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipping/v2/accessPoints": {
            "get": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "Returns a list of access points in proximity of input postal code.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](https://developer-docs.amazon.com/sp-api/docs/usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "getAccessPoints",
                "parameters": [
                    {
                        "name": "accessPointTypes",
                        "in": "query",
                        "description": "Access point types",
                        "required": true,
                        "style": "form",
                        "explode": false,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "HELIX",
                                    "CAMPUS_LOCKER",
                                    "OMNI_LOCKER",
                                    "ODIN_LOCKER",
                                    "DOBBY_LOCKER",
                                    "CORE_LOCKER",
                                    "3P",
                                    "CAMPUS_ROOM"
                                ]
                            },
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "HELIX",
                                    "description": "Counter, aka Helix, is an assisted access point where customers interact with a store associate to collect or return packages. Counter stores do not have Locker"
                                },
                                {
                                    "value": "CAMPUS_LOCKER",
                                    "description": "It denotes a physical Locker present at Locker+ stores"
                                },
                                {
                                    "value": "OMNI_LOCKER",
                                    "description": "Omni lockers are similar to core lockers installed at apartment buildings. Core and Omni will have common base hardware platform"
                                },
                                {
                                    "value": "ODIN_LOCKER",
                                    "description": "Odin lockers rely on Bluetooth connection as there is no screen or scanner on the locker. Drivers, customers, and even technicians can interact with the locker using an app (different depending on the user)."
                                },
                                {
                                    "value": "DOBBY_LOCKER",
                                    "description": "Dobby lockers are Odin lockers installed at apartment complexes and available only to residents."
                                },
                                {
                                    "value": "CORE_LOCKER",
                                    "description": "Core lockers are the traditional and initial style of lockers when Hub was launched. Core lockers have a screen, keypad and scanner.  Customer either enter their pickup code using the Locker screen or scan pickup code barcode to pick up their package."
                                },
                                {
                                    "value": "3P",
                                    "description": "Networks that are owned end-to-end by commercial carriers (CC - e.g. DHL, UPS, DPD and Postal organizations), who operate both the transportation leg and the access point aspect. These networks offer a range of pickup points including: 3P Lockers, legacy Postal Offices, 3P Counters (e.g. Gas Stations and Retail Outlets - supermarkets, bookstores, news-stands etc)."
                                },
                                {
                                    "value": "CAMPUS_ROOM",
                                    "description": "Locker+, formerly known as Campus, are attended, physical stores, where the Locker is used dynamically by the staff to keep packages ready for customer pickup. Locker+ store can have multiple Lockers installed,"
                                }
                            ]
                        },
                        "example": "HELIX",
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "HELIX",
                                "description": "Counter, aka Helix, is an assisted access point where customers interact with a store associate to collect or return packages. Counter stores do not have Locker"
                            },
                            {
                                "value": "CAMPUS_LOCKER",
                                "description": "It denotes a physical Locker present at Locker+ stores"
                            },
                            {
                                "value": "OMNI_LOCKER",
                                "description": "Omni lockers are similar to core lockers installed at apartment buildings. Core and Omni will have common base hardware platform"
                            },
                            {
                                "value": "ODIN_LOCKER",
                                "description": "Odin lockers rely on Bluetooth connection as there is no screen or scanner on the locker. Drivers, customers, and even technicians can interact with the locker using an app (different depending on the user)."
                            },
                            {
                                "value": "DOBBY_LOCKER",
                                "description": "Dobby lockers are Odin lockers installed at apartment complexes and available only to residents."
                            },
                            {
                                "value": "CORE_LOCKER",
                                "description": "Core lockers are the traditional and initial style of lockers when Hub was launched. Core lockers have a screen, keypad and scanner.  Customer either enter their pickup code using the Locker screen or scan pickup code barcode to pick up their package."
                            },
                            {
                                "value": "3P",
                                "description": "Networks that are owned end-to-end by commercial carriers (CC - e.g. DHL, UPS, DPD and Postal organizations), who operate both the transportation leg and the access point aspect. These networks offer a range of pickup points including: 3P Lockers, legacy Postal Offices, 3P Counters (e.g. Gas Stations and Retail Outlets - supermarkets, bookstores, news-stands etc)."
                            },
                            {
                                "value": "CAMPUS_ROOM",
                                "description": "Locker+, formerly known as Campus, are attended, physical stores, where the Locker is used dynamically by the staff to keep packages ready for customer pickup. Locker+ store can have multiple Lockers installed,"
                            }
                        ]
                    },
                    {
                        "name": "countryCode",
                        "in": "query",
                        "description": "Country code for access point",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "US"
                    },
                    {
                        "name": "postalCode",
                        "in": "query",
                        "description": "postal code for access point",
                        "required": true,
                        "schema": {
                            "type": "string"
                        },
                        "example": "EX332JL"
                    },
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    },
                    {
                        "required": false
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetAccessPointsResponse"
                                },
                                "example": {
                                    "HELIX": {
                                        "accessPointId": "00046c4b-bb0a-4c03-831e-5633e142f16a",
                                        "name": "Amazon Hub Counter - Co-op Braunton",
                                        "timezone": "Europe/London",
                                        "type": "HELIX",
                                        "accessibilityAttributes": {
                                            "distance": "21.200000762939453",
                                            "driveTime": "0.0"
                                        },
                                        "address": {
                                            "addressObject": {
                                                "addressLine1": "Exeter Road",
                                                "city": "Braunton",
                                                "countryCode": "GB",
                                                "zipOrPostalCode": "EX33 2JL"
                                            },
                                            "geocode": {
                                                "latitude": "51.1076671",
                                                "longitude": "-4.1607301"
                                            }
                                        },
                                        "exceptionOperatingHours": [
                                            {
                                                "dateRange": {
                                                    "endDate": "1.6932672E9",
                                                    "startDate": "1.6931808E9"
                                                },
                                                "operatingHours": {
                                                    "closingTime": {
                                                        "hourOfDay": 0,
                                                        "minuteOfHour": 0,
                                                        "secondOfMinute": 0
                                                    },
                                                    "midDayClosures": [],
                                                    "openingTime": {
                                                        "hourOfDay": 0,
                                                        "minuteOfHour": 0,
                                                        "secondOfMinute": 0
                                                    }
                                                }
                                            }
                                        ],
                                        "assistanceType": "STAFF_ASSISTED",
                                        "score": "0.6688068509101868",
                                        "standardOperatingHours": {
                                            "WEDNESDAY": {
                                                "closingTime": {
                                                    "hourOfDay": 22,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                },
                                                "midDayClosures": [],
                                                "openingTime": {
                                                    "hourOfDay": 7,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                }
                                            },
                                            "MONDAY": {
                                                "closingTime": {
                                                    "hourOfDay": 22,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                },
                                                "midDayClosures": [],
                                                "openingTime": {
                                                    "hourOfDay": 7,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                }
                                            },
                                            "THURSDAY": {
                                                "closingTime": {
                                                    "hourOfDay": 22,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                },
                                                "midDayClosures": [],
                                                "openingTime": {
                                                    "hourOfDay": 7,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                }
                                            },
                                            "SUNDAY": {
                                                "closingTime": {
                                                    "hourOfDay": 22,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                },
                                                "midDayClosures": [],
                                                "openingTime": {
                                                    "hourOfDay": 7,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                }
                                            },
                                            "TUESDAY": {
                                                "closingTime": {
                                                    "hourOfDay": 22,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                },
                                                "midDayClosures": [],
                                                "openingTime": {
                                                    "hourOfDay": 7,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                }
                                            },
                                            "FRIDAY": {
                                                "closingTime": {
                                                    "hourOfDay": 22,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                },
                                                "midDayClosures": [],
                                                "openingTime": {
                                                    "hourOfDay": 7,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                }
                                            },
                                            "SATURDAY": {
                                                "closingTime": {
                                                    "hourOfDay": 22,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                },
                                                "midDayClosures": [],
                                                "openingTime": {
                                                    "hourOfDay": 7,
                                                    "minuteOfHour": 0,
                                                    "secondOfMinute": 0
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "Access Point types cannot be null"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested response or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-amzn-api-sandbox": {
                    "dynamic": {}
                }
            }
        },
        "/shipping/v2/ndrFeedback": {
            "post": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "This API submits the NDR (Non-delivery Report) Feedback for any eligible shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "submitNdrFeedback",
                "parameters": [
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "requestBody": {
                    "description": "Request body for ndrFeedback operation",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/SubmitNdrFeedbackRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "204": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {}
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "RescheduleDate is missing in the request"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested resource or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested resource or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or doesn't exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Something went wrong while processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-amzn-api-sandbox": {
                    "dynamic": {}
                },
                "x-codegen-request-body-name": "body"
            }
        },
        "/shipping/v2/claims": {
            "post": {
                "tags": [
                    "ShippingV2"
                ],
                "description": "This API will be used to create claim for single eligible shipment.\n\n**Usage Plan:**\n\n| Rate (requests per second) | Burst |\n| ---- | ---- |\n| 80 | 100 |\n\nThe `x-amzn-RateLimit-Limit` response header returns the usage plan rate limits that were applied to the requested operation, when available. The table above indicates the default rate and burst values for this operation. Selling partners whose business demands require higher throughput may see higher rate and burst values then those shown here. For more information, see [Usage Plans and Rate Limits in the Selling Partner API](doc:usage-plans-and-rate-limits-in-the-sp-api).",
                "operationId": "createClaim",
                "parameters": [
                    {
                        "name": "x-amzn-shipping-business-id",
                        "in": "header",
                        "description": "Amazon shipping business to assume for this request. The default is AmazonShipping_UK.",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "AmazonShipping_US",
                                "AmazonShipping_IN",
                                "AmazonShipping_UK",
                                "AmazonShipping_UAE",
                                "AmazonShipping_SA",
                                "AmazonShipping_EG",
                                "AmazonShipping_IT",
                                "AmazonShipping_ES",
                                "AmazonShipping_FR",
                                "AmazonShipping_JP"
                            ],
                            "x-docgen-enum-table-extension": [
                                {
                                    "value": "AmazonShipping_US",
                                    "description": "The United States Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IN",
                                    "description": "The India Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UK",
                                    "description": "The United Kingdom Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_UAE",
                                    "description": "The United Arab Emirates Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_SA",
                                    "description": "The Saudi Arabia Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_EG",
                                    "description": "The Egypt Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_IT",
                                    "description": "The Italy Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_ES",
                                    "description": "The Spain Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_FR",
                                    "description": "The France Amazon shipping business."
                                },
                                {
                                    "value": "AmazonShipping_JP",
                                    "description": "The Japan Amazon shipping business."
                                }
                            ]
                        },
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "AmazonShipping_US",
                                "description": "The United States Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IN",
                                "description": "The India Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UK",
                                "description": "The United Kingdom Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_UAE",
                                "description": "The United Arab Emirates Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_SA",
                                "description": "The Saudi Arabia Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_EG",
                                "description": "The Egypt Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_IT",
                                "description": "The Italy Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_ES",
                                "description": "The Spain Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_FR",
                                "description": "The France Amazon shipping business."
                            },
                            {
                                "value": "AmazonShipping_JP",
                                "description": "The Japan Amazon shipping business."
                            }
                        ]
                    }
                ],
                "requestBody": {
                    "description": "Request body for the createClaim operation",
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateClaimRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Success",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateClaimResponse"
                                },
                                "example": {
                                    "claimId": "1318160977650"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Request has missing or invalid parameters and cannot be parsed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidInputException",
                                            "message": "Request is missing or has invalid parameters",
                                            "details": "Claim already exists for the trackingId"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "The request's Authorization header is not formatted correctly or does not contain a valid token.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You don't have access to the requested resource or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Indicates that access to the resource is forbidden. Possible reasons include Access Denied, Unauthorized, Expired Token, or Invalid Signature.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "Unauthorized",
                                            "message": "You do not have access to the requested resource or the credentials are invalid."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The resource specified does not exist.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            },
                            "x-amzn-RateLimit-Limit": {
                                "description": "Your rate limit (requests per second) for this operation.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "NotFound",
                                            "message": "The requested resource is invalid or does not exist"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "413": {
                        "description": "The request size exceeded the maximum accepted size.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload size is greater than maximum accepted size."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "415": {
                        "description": "The request payload is in an unsupported format.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InvalidRequest",
                                            "message": "The request payload format is not supported."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "429": {
                        "description": "The frequency of requests was greater than allowed.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "TooManyRequests",
                                            "message": "The total number of requests exceeded your allowed limit."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "An unexpected condition occurred that prevented the server from fulfilling the request.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "InternalError",
                                            "message": "Unknown error in processing the request."
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "503": {
                        "description": "Temporary overloading or maintenance of the server.",
                        "headers": {
                            "x-amzn-RequestId": {
                                "description": "Unique request reference identifier.",
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorList"
                                },
                                "example": {
                                    "errors": [
                                        {
                                            "code": "ServiceUnavailable",
                                            "message": "Service temporarily unavailable or down for maintenance. Please try again after sometime."
                                        }
                                    ]
                                }
                            }
                        }
                    }
                },
                "x-amzn-api-sandbox": {
                    "dynamic": {}
                },
                "x-codegen-request-body-name": "body"
            }
        }
    },
    "components": {
        "schemas": {
            "Error": {
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "An error code that identifies the type of error that occurred."
                    },
                    "message": {
                        "type": "string",
                        "description": "A message that describes the error condition."
                    },
                    "details": {
                        "type": "string",
                        "description": "Additional details that can help the caller understand or fix the issue."
                    }
                },
                "description": "Error response returned when the request is unsuccessful."
            },
            "ErrorList": {
                "required": [
                    "errors"
                ],
                "type": "object",
                "properties": {
                    "errors": {
                        "type": "array",
                        "description": "Array of Errors",
                        "items": {
                            "$ref": "#/components/schemas/Error"
                        }
                    }
                },
                "description": "A list of error responses returned when a request is unsuccessful."
            },
            "Weight": {
                "required": [
                    "unit",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "unit": {
                        "type": "string",
                        "description": "The unit of measurement.",
                        "enum": [
                            "GRAM",
                            "KILOGRAM",
                            "OUNCE",
                            "POUND"
                        ],
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "GRAM",
                                "description": "Metric unit of mass equal to one thousandth of a kilogram."
                            },
                            {
                                "value": "KILOGRAM",
                                "description": "Metric unit of mass."
                            },
                            {
                                "value": "OUNCE",
                                "description": "The imperial unit of weight that is one sixteenth of a pound."
                            },
                            {
                                "value": "POUND",
                                "description": "The imperial unit of weight."
                            }
                        ]
                    },
                    "value": {
                        "type": "number",
                        "description": "The measurement value."
                    }
                },
                "description": "The weight in the units indicated."
            },
            "LiquidVolume": {
                "required": [
                    "unit",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "unit": {
                        "type": "string",
                        "description": "The unit of measurement.",
                        "enum": [
                            "ML",
                            "L",
                            "FL_OZ",
                            "GAL",
                            "PT",
                            "QT",
                            "C"
                        ],
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "ML",
                                "description": "Milliliter - Metric unit of volume."
                            },
                            {
                                "value": "L",
                                "description": "Liter - Metric unit of volume."
                            },
                            {
                                "value": "FL_OZ",
                                "description": "Fluid Ounce - Imperial unit of volume."
                            },
                            {
                                "value": "GAL",
                                "description": "Gallon - Imperial unit of volume."
                            },
                            {
                                "value": "PT",
                                "description": "Pint - Imperial unit of volume."
                            },
                            {
                                "value": "QT",
                                "description": "Quart - Imperial unit of volume."
                            },
                            {
                                "value": "C",
                                "description": "Cup - Imperial unit of volume."
                            }
                        ]
                    },
                    "value": {
                        "type": "number",
                        "description": "The measurement value."
                    }
                },
                "description": "Liquid Volume."
            },
            "InvoiceDetails": {
                "type": "object",
                "properties": {
                    "invoiceNumber": {
                        "type": "string",
                        "description": "The invoice number of the item."
                    },
                    "invoiceDate": {
                        "type": "string",
                        "description": "The invoice date of the item in ISO 8061 format.",
                        "format": "date-time"
                    }
                },
                "description": "The invoice details for charges associated with the goods in the package. Only applies to certain regions."
            },
            "ChargeList": {
                "type": "array",
                "description": "A list of charges based on the shipping service charges applied on a package.",
                "items": {
                    "$ref": "#/components/schemas/ChargeComponent"
                }
            },
            "ChargeComponent": {
                "type": "object",
                "properties": {
                    "amount": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "chargeType": {
                        "type": "string",
                        "description": "The type of charge.",
                        "enum": [
                            "TAX",
                            "DISCOUNT"
                        ],
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "TAX",
                                "description": "A tax imposed on a package."
                            },
                            {
                                "value": "DISCOUNT",
                                "description": "A discount deducted from the cost of a package."
                            }
                        ]
                    }
                },
                "description": "The type and amount of a charge applied on a package."
            },
            "Currency": {
                "required": [
                    "unit",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "The monetary value."
                    },
                    "unit": {
                        "maxLength": 3,
                        "minLength": 3,
                        "type": "string",
                        "description": "The ISO 4217 format 3-character currency code."
                    }
                },
                "description": "The monetary value in the currency indicated, in ISO 4217 standard format."
            },
            "Dimensions": {
                "required": [
                    "height",
                    "length",
                    "unit",
                    "width"
                ],
                "type": "object",
                "properties": {
                    "length": {
                        "type": "number",
                        "description": "The length of the package."
                    },
                    "width": {
                        "type": "number",
                        "description": "The width of the package."
                    },
                    "height": {
                        "type": "number",
                        "description": "The height of the package."
                    },
                    "unit": {
                        "type": "string",
                        "description": "The unit of measurement.",
                        "enum": [
                            "INCH",
                            "CENTIMETER"
                        ],
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "INCH",
                                "description": "The imperial unit of length equal to one twelfth of a foot."
                            },
                            {
                                "value": "CENTIMETER",
                                "description": "A metric unit of length, equal to one hundredth of a meter."
                            }
                        ]
                    }
                },
                "description": "A set of measurements for a three-dimensional object."
            },
            "RequestToken": {
                "type": "string",
                "description": "A unique token generated to identify a getRates operation."
            },
            "RateId": {
                "type": "string",
                "description": "An identifier for the rate (shipment offering) provided by a shipping service provider."
            },
            "CarrierId": {
                "type": "string",
                "description": "The carrier identifier for the offering, provided by the carrier."
            },
            "AccountId": {
                "type": "string",
                "description": "Identifier for the seller's carrier account."
            },
            "CarrierName": {
                "type": "string",
                "description": "The carrier name for the offering."
            },
            "PackageClientReferenceId": {
                "type": "string",
                "description": "A client provided unique identifier for a package being shipped. This value should be saved by the client to pass as a parameter to the getShipmentDocuments operation."
            },
            "ShipmentId": {
                "type": "string",
                "description": "The unique shipment identifier provided by a shipping service."
            },
            "DetailCodes": {
                "type": "string",
                "description": "A list of codes used to provide additional shipment information.",
                "enum": [
                    "BusinessClosed",
                    "CustomerUnavailable",
                    "PaymentNotReady",
                    "OtpNotAvailable",
                    "DeliveryAttempted",
                    "UnableToAccess",
                    "UnableToContactRecipient",
                    "DeliveredToBehindWheelieBin",
                    "DeliveredToPorch",
                    "DeliveredToGarage",
                    "DeliveredToGarden",
                    "DeliveredToGreenhouse",
                    "DeliveredToMailSlot",
                    "DeliveredToMailRoom",
                    "DeliveredToNeighbor",
                    "DeliveredToRearDoor",
                    "DeliveredToReceptionist",
                    "DeliveredToShed",
                    "DeliveredWithOTP",
                    "Signed",
                    "Damaged",
                    "IncorrectItems",
                    "NotRequired",
                    "Rejected",
                    "RejectedByRecipientWithVerification",
                    "CancelledByRecipient",
                    "AddressNotFound",
                    "HazmatShipment",
                    "Undeliverable",
                    "ArrivedAtLocalFacility"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "BusinessClosed",
                        "description": "Attempted delivery but the business was closed."
                    },
                    {
                        "value": "CustomerUnavailable",
                        "description": "Attempted delivery but the recipient was unavailable."
                    },
                    {
                        "value": "PaymentNotReady",
                        "description": "Attempted delivery but cash was not available from recipient."
                    },
                    {
                        "value": "OtpNotAvailable",
                        "description": "Attempted delivery but the recipient did not have the PIN available."
                    },
                    {
                        "value": "DeliveryAttempted",
                        "description": "Delivery was attempted."
                    },
                    {
                        "value": "UnableToAccess",
                        "description": "Attempted delivery but could not access the recipient location."
                    },
                    {
                        "value": "UnableToContactRecipient",
                        "description": "Attempted delivery but unable to contact the recipient to coordinate delivery."
                    },
                    {
                        "value": "DeliveredToBehindWheelieBin",
                        "description": "Shipment delivered behind wheelie bin."
                    },
                    {
                        "value": "DeliveredToPorch",
                        "description": "Shipment delivered to front porch or front door."
                    },
                    {
                        "value": "DeliveredToGarage",
                        "description": "Shipment delivered to garage."
                    },
                    {
                        "value": "DeliveredToGarden",
                        "description": "Shipment delivered to garden."
                    },
                    {
                        "value": "DeliveredToGreenhouse",
                        "description": "Shipment delivered to greenhouse."
                    },
                    {
                        "value": "DeliveredToMailSlot",
                        "description": "Shipment delivered to letterbox/mail slot."
                    },
                    {
                        "value": "DeliveredToMailRoom",
                        "description": "Shipment delivered to mailroom."
                    },
                    {
                        "value": "DeliveredToNeighbor",
                        "description": "Shipment delivered and signed for by neighbor."
                    },
                    {
                        "value": "DeliveredToRearDoor",
                        "description": "Shipment delivered to rear porch or rear door."
                    },
                    {
                        "value": "DeliveredToReceptionist",
                        "description": "Shipment delivered to reception."
                    },
                    {
                        "value": "DeliveredToShed",
                        "description": "Shipment delivered to shed."
                    },
                    {
                        "value": "DeliveredWithOTP",
                        "description": "Shipment delivered with onetime passcode."
                    },
                    {
                        "value": "Signed",
                        "description": "Shipment delivered and signature received."
                    },
                    {
                        "value": "Damaged",
                        "description": "Shipment was damaged. When paired with Rejected this indicates the recipient refused to accept the shipment because the shipment was damaged. When paired with UNDELIVERABLE it means the shipment was undeliverable due to being damaged and may be returned to the seller."
                    },
                    {
                        "value": "IncorrectItems",
                        "description": "Recipient refused to accept the shipment because the shipment contains incorrect item/s."
                    },
                    {
                        "value": "NotRequired",
                        "description": "Recipient refused to accept the shipment because the recipient did not want the shipment."
                    },
                    {
                        "value": "Rejected",
                        "description": "Recipient refused to accept the shipment."
                    },
                    {
                        "value": "RejectedByRecipientWithVerification",
                        "description": "Recipient refused to accept the shipment and provided verification."
                    },
                    {
                        "value": "CancelledByRecipient",
                        "description": "Shipment was cancelled by the recipient. This tag is paired with the rejected shipment status."
                    },
                    {
                        "value": "AddressNotFound",
                        "description": "Shipment is undeliverable and is returning to seller because the address was missing or incorrect."
                    },
                    {
                        "value": "HazmatShipment",
                        "description": "Shipment is non-compliant Hazmat."
                    },
                    {
                        "value": "Undeliverable",
                        "description": "Shipment is undeliverable and is returning to the seller."
                    },
                    {
                        "value": "ArrivedAtLocalFacility",
                        "description": "Package arrived at the local facility."
                    }
                ]
            },
            "TrackingDetailCodes": {
                "required": [
                    "forward",
                    "returns"
                ],
                "type": "object",
                "properties": {
                    "forward": {
                        "type": "array",
                        "description": "Contains detail codes that provide additional details related to the forward leg of the shipment.",
                        "items": {
                            "$ref": "#/components/schemas/DetailCodes"
                        }
                    },
                    "returns": {
                        "type": "array",
                        "description": "Contains detail codes that provide additional details related to the return leg of the shipment.",
                        "items": {
                            "$ref": "#/components/schemas/DetailCodes"
                        }
                    }
                },
                "description": "Contains detail codes that provide additional details related to the forward and return leg of the shipment."
            },
            "TrackingId": {
                "type": "string",
                "description": "The carrier generated identifier for a package in a purchased shipment."
            },
            "ClaimId": {
                "type": "string",
                "description": "The claim identifier originally returned by the createClaim operation."
            },
            "AlternateLegTrackingId": {
                "type": "string",
                "description": "The carrier generated reverse identifier for a returned package in a purchased shipment."
            },
            "ServiceId": {
                "type": "string",
                "description": "An identifier for the shipping service."
            },
            "ServiceName": {
                "type": "string",
                "description": "The name of the shipping service."
            },
            "AdditionalAddressNotes": {
                "maxLength": 256,
                "type": "string",
                "description": "Address notes to re-attempt delivery with."
            },
            "ShipperInstruction": {
                "type": "object",
                "properties": {
                    "deliveryNotes": {
                        "maxLength": 256,
                        "type": "string",
                        "description": "The delivery notes for the shipment"
                    }
                },
                "description": "The shipper instruction."
            },
            "Address": {
                "required": [
                    "addressLine1",
                    "city",
                    "countryCode",
                    "name",
                    "postalCode",
                    "stateOrRegion"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "maxLength": 50,
                        "minLength": 1,
                        "type": "string",
                        "description": "The name of the person, business or institution at the address."
                    },
                    "addressLine1": {
                        "maxLength": 60,
                        "minLength": 1,
                        "type": "string",
                        "description": "The first line of the address."
                    },
                    "addressLine2": {
                        "maxLength": 60,
                        "minLength": 1,
                        "type": "string",
                        "description": "Additional address information, if required."
                    },
                    "addressLine3": {
                        "maxLength": 60,
                        "minLength": 1,
                        "type": "string",
                        "description": "Additional address information, if required."
                    },
                    "companyName": {
                        "type": "string",
                        "description": "The name of the business or institution associated with the address."
                    },
                    "stateOrRegion": {
                        "$ref": "#/components/schemas/StateOrRegion"
                    },
                    "city": {
                        "$ref": "#/components/schemas/City"
                    },
                    "countryCode": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "postalCode": {
                        "$ref": "#/components/schemas/PostalCode"
                    },
                    "email": {
                        "maxLength": 64,
                        "type": "string",
                        "description": "The email address of the contact associated with the address."
                    },
                    "phoneNumber": {
                        "maxLength": 20,
                        "minLength": 1,
                        "type": "string",
                        "description": "The phone number of the person, business or institution located at that address, including the country calling code."
                    },
                    "geocode": {
                        "$ref": "#/components/schemas/Geocode"
                    }
                },
                "description": "The address."
            },
            "Geocode": {
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "string",
                        "description": "The latitude of access point."
                    },
                    "longitude": {
                        "type": "string",
                        "description": "The longitude of access point."
                    }
                },
                "description": "Defines the latitude and longitude of the access point."
            },
            "StateOrRegion": {
                "type": "string",
                "description": "The state, county or region where the person, business or institution is located."
            },
            "City": {
                "type": "string",
                "description": "The city or town where the person, business or institution is located."
            },
            "CountryCode": {
                "type": "string",
                "description": "The two digit country code. Follows ISO 3166-1 alpha-2 format."
            },
            "PostalCode": {
                "type": "string",
                "description": "The postal code of that address. It contains a series of letters or digits or both, sometimes including spaces or punctuation."
            },
            "Location": {
                "type": "object",
                "properties": {
                    "stateOrRegion": {
                        "$ref": "#/components/schemas/StateOrRegion"
                    },
                    "city": {
                        "$ref": "#/components/schemas/City"
                    },
                    "countryCode": {
                        "$ref": "#/components/schemas/CountryCode"
                    },
                    "postalCode": {
                        "$ref": "#/components/schemas/PostalCode"
                    }
                },
                "description": "The location where the person, business or institution is located."
            },
            "DocumentFormat": {
                "type": "string",
                "description": "The file format of the document.",
                "enum": [
                    "PDF",
                    "PNG",
                    "ZPL"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "PDF",
                        "description": "The Portable Document Format (PDF) file format. Used to present documents, including text formatting and images, in a manner independent of application software, hardware, and operating systems."
                    },
                    {
                        "value": "PNG",
                        "description": "Portable Network Graphics (PNG) is a raster-graphics file format that supports lossless data compression."
                    },
                    {
                        "value": "ZPL",
                        "description": "Zebra Programming Language (ZPL) format is from Zebra Technologies. It's used primarily for labeling applications and can only be used with ZPL compatible printers."
                    }
                ]
            },
            "DocumentType": {
                "type": "string",
                "description": "The type of shipping document.",
                "enum": [
                    "PACKSLIP",
                    "LABEL",
                    "RECEIPT",
                    "CUSTOM_FORM"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "PACKSLIP",
                        "description": "A listing of the items packed within the shipment."
                    },
                    {
                        "value": "LABEL",
                        "description": "The shipping label for the specific shipment."
                    },
                    {
                        "value": "RECEIPT",
                        "description": "The receipt of the shipment."
                    },
                    {
                        "value": "CUSTOM_FORM",
                        "description": "The customs documentation for a cross-border shipment."
                    }
                ]
            },
            "Dpi": {
                "type": "integer",
                "description": "The dots per inch (DPI) value used in printing. This value represents a measure of the resolution of the document."
            },
            "PageLayout": {
                "type": "string",
                "description": "Indicates the position of the label on the paper. Should be the same value as returned in getRates response."
            },
            "NeedFileJoining": {
                "type": "boolean",
                "description": "When true, files should be stitched together. Otherwise, files should be returned separately. Defaults to false."
            },
            "Contents": {
                "type": "string",
                "description": "A Base64 encoded string of the file contents."
            },
            "RequestedLabelCustomization": {
                "type": "object",
                "properties": {
                    "requestAttributes": {
                        "$ref": "#/components/schemas/RequestAttributes"
                    }
                },
                "description": "Object contains customised data requested by a shipper to be printed on a shipping label."
            },
            "RequestAttributes": {
                "type": "array",
                "description": "Specify the type of attributes to be added on a label.",
                "items": {
                    "$ref": "#/components/schemas/LabelAttribute"
                }
            },
            "LabelAttribute": {
                "type": "string",
                "description": "Enumerates the attributes supported to be printed on a shipping label. The values for these attributes are retrieved from GetRates/OneClickShipment request",
                "enum": [
                    "PACKAGE_CLIENT_REFERENCE_ID",
                    "SELLER_DISPLAY_NAME",
                    "COLLECT_ON_DELIVERY_AMOUNT"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "PACKAGE_CLIENT_REFERENCE_ID",
                        "description": "Prints client reference ID on the shipping label"
                    },
                    {
                        "value": "SELLER_DISPLAY_NAME",
                        "description": "Prints seller name on the shipping label"
                    },
                    {
                        "value": "COLLECT_ON_DELIVERY_AMOUNT",
                        "description": "Prints Collect On Delivery amount on the shipping label."
                    }
                ]
            },
            "PackageDocumentList": {
                "type": "array",
                "description": "A list of documents related to a package.",
                "items": {
                    "$ref": "#/components/schemas/PackageDocument"
                }
            },
            "PackageDocument": {
                "required": [
                    "contents",
                    "format",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "$ref": "#/components/schemas/DocumentType"
                    },
                    "format": {
                        "$ref": "#/components/schemas/DocumentFormat"
                    },
                    "contents": {
                        "$ref": "#/components/schemas/Contents"
                    }
                },
                "description": "A document related to a package."
            },
            "PrintOptionList": {
                "type": "array",
                "description": "A list of the format options for a label.",
                "items": {
                    "$ref": "#/components/schemas/PrintOption"
                }
            },
            "PrintOption": {
                "required": [
                    "supportedDocumentDetails",
                    "supportedFileJoiningOptions",
                    "supportedPageLayouts"
                ],
                "type": "object",
                "properties": {
                    "supportedDPIs": {
                        "type": "array",
                        "description": "A list of the supported DPI options for a document.",
                        "items": {
                            "$ref": "#/components/schemas/Dpi"
                        }
                    },
                    "supportedPageLayouts": {
                        "type": "array",
                        "description": "A list of the supported page layout options for a document.",
                        "items": {
                            "$ref": "#/components/schemas/PageLayout"
                        }
                    },
                    "supportedFileJoiningOptions": {
                        "type": "array",
                        "description": "A list of the supported needFileJoining boolean values for a document.",
                        "items": {
                            "$ref": "#/components/schemas/NeedFileJoining"
                        }
                    },
                    "supportedDocumentDetails": {
                        "type": "array",
                        "description": "A list of the supported documented details.",
                        "items": {
                            "$ref": "#/components/schemas/SupportedDocumentDetail"
                        }
                    }
                },
                "description": "The format options available for a label."
            },
            "DocumentSize": {
                "required": [
                    "length",
                    "unit",
                    "width"
                ],
                "type": "object",
                "properties": {
                    "width": {
                        "type": "number",
                        "description": "The width of the document measured in the units specified."
                    },
                    "length": {
                        "type": "number",
                        "description": "The length of the document measured in the units specified."
                    },
                    "unit": {
                        "type": "string",
                        "description": "The unit of measurement.",
                        "enum": [
                            "INCH",
                            "CENTIMETER"
                        ],
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "INCH",
                                "description": "The imperial unit of length equal to one twelfth of a foot."
                            },
                            {
                                "value": "CENTIMETER",
                                "description": "A metric unit of length, equal to one hundredth of a meter."
                            }
                        ]
                    }
                },
                "description": "The size dimensions of the label."
            },
            "SupportedDocumentDetail": {
                "required": [
                    "isMandatory",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "$ref": "#/components/schemas/DocumentType"
                    },
                    "isMandatory": {
                        "type": "boolean",
                        "description": "When true, the supported document type is required."
                    }
                },
                "description": "The supported document types for a service offering."
            },
            "RequestedDocumentSpecification": {
                "required": [
                    "format",
                    "needFileJoining",
                    "requestedDocumentTypes",
                    "size"
                ],
                "type": "object",
                "properties": {
                    "format": {
                        "$ref": "#/components/schemas/DocumentFormat"
                    },
                    "size": {
                        "$ref": "#/components/schemas/DocumentSize"
                    },
                    "dpi": {
                        "$ref": "#/components/schemas/Dpi"
                    },
                    "pageLayout": {
                        "$ref": "#/components/schemas/PageLayout"
                    },
                    "needFileJoining": {
                        "$ref": "#/components/schemas/NeedFileJoining"
                    },
                    "requestedDocumentTypes": {
                        "type": "array",
                        "description": "A list of the document types requested.",
                        "items": {
                            "$ref": "#/components/schemas/DocumentType"
                        }
                    },
                    "requestedLabelCustomization": {
                        "$ref": "#/components/schemas/RequestedLabelCustomization"
                    }
                },
                "description": "The document specifications requested. For calls to the purchaseShipment operation, the shipment purchase fails if the specified document specifications are not among those returned in the response to the getRates operation."
            },
            "SupportedDocumentSpecificationList": {
                "type": "array",
                "description": "A list of the document specifications supported for a shipment service offering.",
                "items": {
                    "$ref": "#/components/schemas/SupportedDocumentSpecification"
                }
            },
            "SupportedDocumentSpecification": {
                "required": [
                    "format",
                    "printOptions",
                    "size"
                ],
                "type": "object",
                "properties": {
                    "format": {
                        "$ref": "#/components/schemas/DocumentFormat"
                    },
                    "size": {
                        "$ref": "#/components/schemas/DocumentSize"
                    },
                    "printOptions": {
                        "$ref": "#/components/schemas/PrintOptionList"
                    }
                },
                "description": "Document specification that is supported for a service offering."
            },
            "Item": {
                "required": [
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "itemValue": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "description": {
                        "type": "string",
                        "description": "The product description of the item."
                    },
                    "itemIdentifier": {
                        "type": "string",
                        "description": "A unique identifier for an item provided by the client."
                    },
                    "quantity": {
                        "type": "integer",
                        "description": "The number of units. This value is required."
                    },
                    "weight": {
                        "$ref": "#/components/schemas/Weight"
                    },
                    "liquidVolume": {
                        "$ref": "#/components/schemas/LiquidVolume"
                    },
                    "isHazmat": {
                        "type": "boolean",
                        "description": "When true, the item qualifies as hazardous materials (hazmat). Defaults to false."
                    },
                    "dangerousGoodsDetails": {
                        "$ref": "#/components/schemas/DangerousGoodsDetails"
                    },
                    "productType": {
                        "type": "string",
                        "description": "The product type of the item."
                    },
                    "invoiceDetails": {
                        "$ref": "#/components/schemas/InvoiceDetails"
                    },
                    "serialNumbers": {
                        "type": "array",
                        "description": "A list of unique serial numbers in an Amazon package that can be used to guarantee non-fraudulent items. The number of serial numbers in the list must be less than or equal to the quantity of items being shipped. Only applicable when channel source is Amazon.",
                        "items": {
                            "type": "string"
                        }
                    },
                    "directFulfillmentItemIdentifiers": {
                        "$ref": "#/components/schemas/DirectFulfillmentItemIdentifiers"
                    }
                },
                "description": "An item in a package."
            },
            "ItemList": {
                "type": "array",
                "description": "A list of items.",
                "items": {
                    "$ref": "#/components/schemas/Item"
                }
            },
            "Package": {
                "required": [
                    "dimensions",
                    "insuredValue",
                    "items",
                    "packageClientReferenceId",
                    "weight"
                ],
                "type": "object",
                "properties": {
                    "dimensions": {
                        "$ref": "#/components/schemas/Dimensions"
                    },
                    "weight": {
                        "$ref": "#/components/schemas/Weight"
                    },
                    "insuredValue": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "isHazmat": {
                        "type": "boolean",
                        "description": "When true, the package contains hazardous materials. Defaults to false."
                    },
                    "sellerDisplayName": {
                        "type": "string",
                        "description": "The seller name displayed on the label."
                    },
                    "charges": {
                        "$ref": "#/components/schemas/ChargeList"
                    },
                    "packageClientReferenceId": {
                        "$ref": "#/components/schemas/PackageClientReferenceId"
                    },
                    "items": {
                        "$ref": "#/components/schemas/ItemList"
                    }
                },
                "description": "A package to be shipped through a shipping service offering."
            },
            "PackageList": {
                "type": "array",
                "description": "A list of packages to be shipped through a shipping service offering.",
                "items": {
                    "$ref": "#/components/schemas/Package"
                }
            },
            "DirectFulfillmentItemIdentifiers": {
                "required": [
                    "lineItemID"
                ],
                "type": "object",
                "properties": {
                    "lineItemID": {
                        "type": "string",
                        "description": "A unique identifier for an item provided by the client for a direct fulfillment shipment. This is only populated for direct fulfillment multi-piece shipments. It is required if a vendor wants to change the configuration of the packages in which the purchase order is shipped."
                    },
                    "pieceNumber": {
                        "type": "string",
                        "description": "A unique identifier for an item provided by the client for a direct fulfillment shipment. This is only populated if a single line item has multiple pieces. Defaults to 1."
                    }
                },
                "description": "Item identifiers for an item in a direct fulfillment shipment."
            },
            "PackageDocumentDetail": {
                "required": [
                    "packageClientReferenceId",
                    "packageDocuments"
                ],
                "type": "object",
                "properties": {
                    "packageClientReferenceId": {
                        "$ref": "#/components/schemas/PackageClientReferenceId"
                    },
                    "packageDocuments": {
                        "$ref": "#/components/schemas/PackageDocumentList"
                    },
                    "trackingId": {
                        "$ref": "#/components/schemas/TrackingId"
                    }
                },
                "description": "The post-purchase details of a package that will be shipped using a shipping service."
            },
            "PackageDocumentDetailList": {
                "type": "array",
                "description": "A list of post-purchase details about a package that will be shipped using a shipping service.",
                "items": {
                    "$ref": "#/components/schemas/PackageDocumentDetail"
                }
            },
            "TimeWindow": {
                "type": "object",
                "properties": {
                    "start": {
                        "type": "string",
                        "description": "The start time of the time window.",
                        "format": "date-time"
                    },
                    "end": {
                        "type": "string",
                        "description": "The end time of the time window.",
                        "format": "date-time"
                    }
                },
                "description": "The start and end time that specifies the time interval of an event."
            },
            "Promise": {
                "type": "object",
                "properties": {
                    "deliveryWindow": {
                        "$ref": "#/components/schemas/TimeWindow"
                    },
                    "pickupWindow": {
                        "$ref": "#/components/schemas/TimeWindow"
                    }
                },
                "description": "The time windows promised for pickup and delivery events."
            },
            "RequestedValueAddedServiceList": {
                "type": "array",
                "description": "The value-added services to be added to a shipping service purchase.",
                "items": {
                    "$ref": "#/components/schemas/RequestedValueAddedService"
                }
            },
            "RequestedValueAddedService": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the selected value-added service. Must be among those returned in the response to the getRates operation."
                    }
                },
                "description": "A value-added service to be applied to a shipping service purchase."
            },
            "AvailableValueAddedServiceGroupList": {
                "type": "array",
                "description": "A list of value-added services available for a shipping service offering.",
                "items": {
                    "$ref": "#/components/schemas/AvailableValueAddedServiceGroup"
                }
            },
            "AvailableValueAddedServiceGroup": {
                "required": [
                    "groupDescription",
                    "groupId",
                    "isRequired"
                ],
                "type": "object",
                "properties": {
                    "groupId": {
                        "type": "string",
                        "description": "The type of the value-added service group."
                    },
                    "groupDescription": {
                        "type": "string",
                        "description": "The name of the value-added service group."
                    },
                    "isRequired": {
                        "type": "boolean",
                        "description": "When true, one or more of the value-added services listed must be specified."
                    },
                    "valueAddedServices": {
                        "type": "array",
                        "description": "A list of optional value-added services available for purchase with a shipping service offering.",
                        "items": {
                            "$ref": "#/components/schemas/ValueAddedService"
                        }
                    }
                },
                "description": "The value-added services available for purchase with a shipping service offering."
            },
            "ValueAddedService": {
                "required": [
                    "cost",
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier for the value-added service."
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the value-added service."
                    },
                    "cost": {
                        "$ref": "#/components/schemas/Currency"
                    }
                },
                "description": "A value-added service available for purchase with a shipment service offering."
            },
            "CollectOnDelivery": {
                "required": [
                    "amount"
                ],
                "type": "object",
                "properties": {
                    "amount": {
                        "$ref": "#/components/schemas/Currency"
                    }
                },
                "description": "The amount to collect on delivery."
            },
            "ValueAddedServiceDetails": {
                "type": "object",
                "properties": {
                    "collectOnDelivery": {
                        "$ref": "#/components/schemas/CollectOnDelivery"
                    }
                },
                "description": "A collection of supported value-added services."
            },
            "DangerousGoodsDetails": {
                "type": "object",
                "properties": {
                    "unitedNationsRegulatoryId": {
                        "pattern": "^(UN|ID|NA)[0-9]{4}$",
                        "type": "string",
                        "description": "The specific UNID of the item being shipped."
                    },
                    "transportationRegulatoryClass": {
                        "pattern": "^[1-9](\\.[1-9])?$",
                        "type": "string",
                        "description": "The specific regulatory class  of the item being shipped."
                    },
                    "packingGroup": {
                        "type": "string",
                        "description": "The specific packaging group of the item being shipped.",
                        "enum": [
                            "I",
                            "II",
                            "III"
                        ],
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "I",
                                "description": "Packing group I indicates great danger."
                            },
                            {
                                "value": "II",
                                "description": "Packing group II indicates medium danger."
                            },
                            {
                                "value": "III",
                                "description": "Packing group III indicates minor danger."
                            }
                        ]
                    },
                    "packingInstruction": {
                        "type": "string",
                        "description": "The specific packing instruction of the item being shipped.",
                        "enum": [
                            "PI965_SECTION_IA",
                            "PI965_SECTION_IB",
                            "PI965_SECTION_II",
                            "PI966_SECTION_I",
                            "PI966_SECTION_II",
                            "PI967_SECTION_I",
                            "PI967_SECTION_II",
                            "PI968_SECTION_IA",
                            "PI968_SECTION_IB",
                            "PI969_SECTION_I",
                            "PI969_SECTION_II",
                            "PI970_SECTION_I",
                            "PI970_SECTION_II"
                        ],
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "PI965_SECTION_IA",
                                "description": "Ion PI965 Section IA (LiBa)"
                            },
                            {
                                "value": "PI965_SECTION_IB",
                                "description": "Ion PI965 Section IB (LiBa)"
                            },
                            {
                                "value": "PI965_SECTION_II",
                                "description": "Ion PI965 Section II (LiBa)"
                            },
                            {
                                "value": "PI966_SECTION_I",
                                "description": "Ion PI966 Section I (LiBa with equipment)"
                            },
                            {
                                "value": "PI966_SECTION_II",
                                "description": "Ion PI966 Section II (LiBa with equipment)"
                            },
                            {
                                "value": "PI967_SECTION_I",
                                "description": "Ion PI967 Section I (LiBa in equipment)"
                            },
                            {
                                "value": "PI967_SECTION_II",
                                "description": "Ion PI967 Section II (LiBa in equipment)"
                            },
                            {
                                "value": "PI968_SECTION_IA",
                                "description": "Metal PI968 Section IA (LiBa)"
                            },
                            {
                                "value": "PI968_SECTION_IB",
                                "description": "Metal PI968 Section IB (LiBa)"
                            },
                            {
                                "value": "PI969_SECTION_I",
                                "description": "Metal PI969 Section I (LiBa with equipment)"
                            },
                            {
                                "value": "PI969_SECTION_II",
                                "description": "Metal PI969 Section II (LiBa with equipment)"
                            },
                            {
                                "value": "PI970_SECTION_I",
                                "description": "Metal PI970 Section I (LiBa in equipment)"
                            },
                            {
                                "value": "PI970_SECTION_II",
                                "description": "Metal PI970 Section II (LiBa in equipment)"
                            }
                        ]
                    }
                },
                "description": "Details related to any dangerous goods/items that are being shipped."
            },
            "TaxType": {
                "type": "string",
                "description": "Indicates the type of tax.",
                "enum": [
                    "GST"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "GST",
                        "description": "Goods and Services Tax."
                    }
                ]
            },
            "TaxDetail": {
                "required": [
                    "taxRegistrationNumber",
                    "taxType"
                ],
                "type": "object",
                "properties": {
                    "taxType": {
                        "$ref": "#/components/schemas/TaxType"
                    },
                    "taxRegistrationNumber": {
                        "type": "string",
                        "description": "The shipper's tax registration number associated with the shipment for customs compliance purposes in certain regions."
                    }
                },
                "description": "Indicates the tax specifications associated with the shipment for customs compliance purposes in certain regions."
            },
            "TaxDetailList": {
                "type": "array",
                "description": "A list of tax detail information.",
                "items": {
                    "$ref": "#/components/schemas/TaxDetail"
                }
            },
            "GoodsOwner": {
                "required": [
                    "merchantId"
                ],
                "type": "object",
                "properties": {
                    "merchantId": {
                        "$ref": "#/components/schemas/MerchantId"
                    }
                },
                "description": "The seller owning the goods before handing them over to the carrier"
            },
            "EventCode": {
                "type": "string",
                "description": "The tracking event type.",
                "enum": [
                    "ReadyForReceive",
                    "PickupDone",
                    "Delivered",
                    "Departed",
                    "DeliveryAttempted",
                    "Lost",
                    "OutForDelivery",
                    "ArrivedAtCarrierFacility",
                    "Rejected",
                    "Undeliverable",
                    "PickupCancelled",
                    "ReturnInitiated",
                    "AvailableForPickup",
                    "RecipientRequestedAlternateDeliveryTiming"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "ReadyForReceive",
                        "description": "Package has been created and is ready for pickup at the shippers location. This is a pre-transit status event code."
                    },
                    {
                        "value": "PickupDone",
                        "description": "Package has been picked up by the service provider."
                    },
                    {
                        "value": "Delivered",
                        "description": "Package has been delivered."
                    },
                    {
                        "value": "Departed",
                        "description": "Package has departed from a particular location in carrier network."
                    },
                    {
                        "value": "DeliveryAttempted",
                        "description": "Delivery was attempted, but was unsuccessful."
                    },
                    {
                        "value": "Lost",
                        "description": "Package is lost."
                    },
                    {
                        "value": "OutForDelivery",
                        "description": "Package is out for delivery."
                    },
                    {
                        "value": "ArrivedAtCarrierFacility",
                        "description": "Package is in transit and has been received at a carrier location."
                    },
                    {
                        "value": "Rejected",
                        "description": "Package was rejected by the recipient."
                    },
                    {
                        "value": "Undeliverable",
                        "description": "Package is undeliverable."
                    },
                    {
                        "value": "PickupCancelled",
                        "description": "Pickup scheduled for the package was cancelled."
                    },
                    {
                        "value": "ReturnInitiated",
                        "description": "Return label has been generated."
                    },
                    {
                        "value": "AvailableForPickup",
                        "description": "Package held for recipient pickup."
                    },
                    {
                        "value": "RecipientRequestedAlternateDeliveryTiming",
                        "description": "Recipient has requested an update to their delivery date."
                    }
                ]
            },
            "Event": {
                "required": [
                    "eventCode",
                    "eventTime"
                ],
                "type": "object",
                "properties": {
                    "eventCode": {
                        "$ref": "#/components/schemas/EventCode"
                    },
                    "location": {
                        "$ref": "#/components/schemas/Location"
                    },
                    "eventTime": {
                        "type": "string",
                        "description": "The ISO 8601 formatted timestamp of the event.",
                        "format": "date-time"
                    },
                    "shipmentType": {
                        "$ref": "#/components/schemas/ShipmentType"
                    }
                },
                "description": "A tracking event."
            },
            "TrackingSummary": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/Status"
                    },
                    "trackingDetailCodes": {
                        "$ref": "#/components/schemas/TrackingDetailCodes"
                    }
                },
                "description": "A package status summary."
            },
            "Status": {
                "type": "string",
                "description": "The status of the package being shipped.",
                "enum": [
                    "PreTransit",
                    "InTransit",
                    "Delivered",
                    "Lost",
                    "OutForDelivery",
                    "Rejected",
                    "Undeliverable",
                    "DeliveryAttempted",
                    "PickupCancelled",
                    "AwaitingCustomerPickup"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "PreTransit",
                        "description": "Package has been created but has not been picked up."
                    },
                    {
                        "value": "InTransit",
                        "description": "Package has been picked up and is in transit."
                    },
                    {
                        "value": "Delivered",
                        "description": "Package has has been delivered successfully."
                    },
                    {
                        "value": "Lost",
                        "description": "Package is lost."
                    },
                    {
                        "value": "OutForDelivery",
                        "description": "Package is out for delivery."
                    },
                    {
                        "value": "Rejected",
                        "description": "Package has been rejected by the recipient."
                    },
                    {
                        "value": "Undeliverable",
                        "description": "Package was undeliverable."
                    },
                    {
                        "value": "DeliveryAttempted",
                        "description": "Delivery was attempted to the recipient location, but was not delivered."
                    },
                    {
                        "value": "PickupCancelled",
                        "description": "Pickup was cancelled for the package."
                    },
                    {
                        "value": "AwaitingCustomerPickup",
                        "description": "Package held at facility for the customer pickup."
                    }
                ]
            },
            "AmazonOrderDetails": {
                "required": [
                    "orderId"
                ],
                "type": "object",
                "properties": {
                    "orderId": {
                        "type": "string",
                        "description": "The Amazon order ID associated with the Amazon order fulfilled by this shipment."
                    }
                },
                "description": "Amazon order information. This is required if the shipment source channel is Amazon."
            },
            "AmazonShipmentDetails": {
                "required": [
                    "shipmentId"
                ],
                "type": "object",
                "properties": {
                    "shipmentId": {
                        "type": "string",
                        "description": "This attribute is required only for a Direct Fulfillment shipment. This is the encrypted shipment ID."
                    }
                },
                "description": "Amazon shipment information."
            },
            "ChannelType": {
                "type": "string",
                "description": "The shipment source channel type.",
                "enum": [
                    "AMAZON",
                    "EXTERNAL"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "AMAZON",
                        "description": "Indicates that the shipment originates from an Amazon order."
                    },
                    {
                        "value": "EXTERNAL",
                        "description": "Indicates that the shipment originates from a non-Amazon channel."
                    }
                ]
            },
            "ChannelDetails": {
                "required": [
                    "channelType"
                ],
                "type": "object",
                "properties": {
                    "channelType": {
                        "$ref": "#/components/schemas/ChannelType"
                    },
                    "amazonOrderDetails": {
                        "$ref": "#/components/schemas/AmazonOrderDetails"
                    },
                    "amazonShipmentDetails": {
                        "$ref": "#/components/schemas/AmazonShipmentDetails"
                    }
                },
                "description": "Shipment source channel related information."
            },
            "RateList": {
                "type": "array",
                "description": "A list of eligible shipping service offerings.",
                "items": {
                    "$ref": "#/components/schemas/Rate"
                }
            },
            "Rate": {
                "required": [
                    "carrierId",
                    "carrierName",
                    "promise",
                    "rateId",
                    "requiresAdditionalInputs",
                    "serviceId",
                    "serviceName",
                    "supportedDocumentSpecifications",
                    "totalCharge"
                ],
                "type": "object",
                "properties": {
                    "rateId": {
                        "$ref": "#/components/schemas/RateId"
                    },
                    "carrierId": {
                        "$ref": "#/components/schemas/CarrierId"
                    },
                    "carrierName": {
                        "$ref": "#/components/schemas/CarrierName"
                    },
                    "serviceId": {
                        "$ref": "#/components/schemas/ServiceId"
                    },
                    "serviceName": {
                        "$ref": "#/components/schemas/ServiceName"
                    },
                    "billedWeight": {
                        "$ref": "#/components/schemas/Weight"
                    },
                    "totalCharge": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "promise": {
                        "$ref": "#/components/schemas/Promise"
                    },
                    "supportedDocumentSpecifications": {
                        "$ref": "#/components/schemas/SupportedDocumentSpecificationList"
                    },
                    "availableValueAddedServiceGroups": {
                        "$ref": "#/components/schemas/AvailableValueAddedServiceGroupList"
                    },
                    "requiresAdditionalInputs": {
                        "type": "boolean",
                        "description": "When true, indicates that additional inputs are required to purchase this shipment service. You must then call the getAdditionalInputs operation to return the JSON schema to use when providing the additional inputs to the purchaseShipment operation."
                    },
                    "rateItemList": {
                        "$ref": "#/components/schemas/RateItemList"
                    },
                    "paymentType": {
                        "$ref": "#/components/schemas/PaymentType"
                    },
                    "benefits": {
                        "$ref": "#/components/schemas/Benefits"
                    }
                },
                "description": "The details of a shipping service offering."
            },
            "IneligibilityReasonCode": {
                "type": "string",
                "description": "Reasons that make a shipment service offering ineligible.",
                "enum": [
                    "NO_COVERAGE",
                    "PICKUP_SLOT_RESTRICTION",
                    "UNSUPPORTED_VAS",
                    "VAS_COMBINATION_RESTRICTION",
                    "SIZE_RESTRICTIONS",
                    "WEIGHT_RESTRICTIONS",
                    "LATE_DELIVERY",
                    "PROGRAM_CONSTRAINTS",
                    "TERMS_AND_CONDITIONS_NOT_ACCEPTED",
                    "UNKNOWN"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "NO_COVERAGE",
                        "description": "The shipment is ineligible because there is no coverage to that address."
                    },
                    {
                        "value": "PICKUP_SLOT_RESTRICTION",
                        "description": "The shipment is ineligible because there is an issue with the pickup slot."
                    },
                    {
                        "value": "UNSUPPORTED_VAS",
                        "description": "The shipment is ineligible because the value-added service is invalid for this shipment."
                    },
                    {
                        "value": "VAS_COMBINATION_RESTRICTION",
                        "description": "The shipment is ineligible because an invalid combination of value-added services were chosen."
                    },
                    {
                        "value": "SIZE_RESTRICTIONS",
                        "description": "The shipment is ineligible because the package dimensions are unsupported."
                    },
                    {
                        "value": "WEIGHT_RESTRICTIONS",
                        "description": "The shipment is ineligible because the weight is unsupported."
                    },
                    {
                        "value": "LATE_DELIVERY",
                        "description": "The shipment is ineligible because delivery is too late."
                    },
                    {
                        "value": "PROGRAM_CONSTRAINTS",
                        "description": "The shipment is ineligible because of program constraints."
                    },
                    {
                        "value": "TERMS_AND_CONDITIONS_NOT_ACCEPTED",
                        "description": "The shipment is ineligible because terms and conditions have not been accepted by the carrier."
                    },
                    {
                        "value": "UNKNOWN",
                        "description": "The ineligibility reason is unknown."
                    }
                ]
            },
            "IneligibilityReason": {
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "$ref": "#/components/schemas/IneligibilityReasonCode"
                    },
                    "message": {
                        "type": "string",
                        "description": "The ineligibility reason."
                    }
                },
                "description": "The reason why a shipping service offering is ineligible."
            },
            "IneligibleRate": {
                "required": [
                    "carrierId",
                    "carrierName",
                    "ineligibilityReasons",
                    "serviceId",
                    "serviceName"
                ],
                "type": "object",
                "properties": {
                    "serviceId": {
                        "$ref": "#/components/schemas/ServiceId"
                    },
                    "serviceName": {
                        "$ref": "#/components/schemas/ServiceName"
                    },
                    "carrierName": {
                        "$ref": "#/components/schemas/CarrierName"
                    },
                    "carrierId": {
                        "$ref": "#/components/schemas/CarrierId"
                    },
                    "ineligibilityReasons": {
                        "type": "array",
                        "description": "A list of reasons why a shipping service offering is ineligible.",
                        "items": {
                            "$ref": "#/components/schemas/IneligibilityReason"
                        }
                    }
                },
                "description": "Detailed information for an ineligible shipping service offering."
            },
            "IneligibleRateList": {
                "type": "array",
                "description": "A list of ineligible shipping service offerings.",
                "items": {
                    "$ref": "#/components/schemas/IneligibleRate"
                }
            },
            "CancelShipmentResult": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                },
                "description": "The payload for the cancelShipment operation."
            },
            "CancelShipmentResponse": {
                "type": "object",
                "properties": {
                    "payload": {
                        "$ref": "#/components/schemas/CancelShipmentResult"
                    }
                },
                "description": "Response schema for the cancelShipment operation."
            },
            "GetRatesRequest": {
                "required": [
                    "channelDetails",
                    "packages",
                    "shipFrom"
                ],
                "type": "object",
                "properties": {
                    "shipTo": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "shipFrom": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "returnTo": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "shipDate": {
                        "type": "string",
                        "description": "The ship date and time (the requested pickup). This defaults to the current date and time.",
                        "format": "date-time"
                    },
                    "shipperInstruction": {
                        "$ref": "#/components/schemas/ShipperInstruction"
                    },
                    "packages": {
                        "$ref": "#/components/schemas/PackageList"
                    },
                    "valueAddedServices": {
                        "$ref": "#/components/schemas/ValueAddedServiceDetails"
                    },
                    "taxDetails": {
                        "$ref": "#/components/schemas/TaxDetailList"
                    },
                    "channelDetails": {
                        "$ref": "#/components/schemas/ChannelDetails"
                    },
                    "clientReferenceDetails": {
                        "$ref": "#/components/schemas/ClientReferenceDetails"
                    },
                    "shipmentType": {
                        "$ref": "#/components/schemas/ShipmentType"
                    },
                    "destinationAccessPointDetails": {
                        "$ref": "#/components/schemas/AccessPointDetails"
                    },
                    "carrierAccounts": {
                        "$ref": "#/components/schemas/CarrierAccounts"
                    }
                },
                "description": "The request schema for the getRates operation. When the channelType is Amazon, the shipTo address is not required and will be ignored."
            },
            "AccessPointDetails": {
                "type": "object",
                "properties": {
                    "accessPointId": {
                        "$ref": "#/components/schemas/AccessPointId"
                    }
                },
                "description": "AccessPointDetails object"
            },
            "NdrAction": {
                "type": "string",
                "description": "The type of NDR action shipper wants to take for a particular shipment.",
                "enum": [
                    "RESCHEDULE",
                    "REATTEMPT",
                    "RTO"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "RESCHEDULE",
                        "description": "Seller wants to reschedule shipment delivery to a specific date."
                    },
                    {
                        "value": "REATTEMPT",
                        "description": "Seller wants to re-attempt delivery with additional delivery notes."
                    },
                    {
                        "value": "RTO",
                        "description": "Seller wants the shipment to return to the origin."
                    }
                ]
            },
            "NdrRequestData": {
                "type": "object",
                "properties": {
                    "rescheduleDate": {
                        "type": "string",
                        "description": "The date on which the Seller wants to reschedule shipment delivery, in ISO-8601 date/time format",
                        "format": "date-time",
                        "example": "2023-12-12T05:24:00Z"
                    },
                    "additionalAddressNotes": {
                        "$ref": "#/components/schemas/AdditionalAddressNotes"
                    }
                },
                "description": "Additional information required for the NDR action that has been filed. If the NDR Action is RESCHEDULE, rescheduleDate is a required field. Otherwise, if the NDR Action is REATTEMPT, additionalAddressNotes is a required field. "
            },
            "ClaimReason": {
                "type": "string",
                "description": "The reason for which shipper is filing the claim for a particular shipment.",
                "enum": [
                    "LOST_IN_TRANSIT",
                    "DAMAGED_IN_TRANSIT",
                    "DELIVERED_NOT_RECEIVED",
                    "ITEM_MISSING_SWITCHEROO",
                    "COD_ABUSE"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "LOST_IN_TRANSIT",
                        "description": "Shipment was lost in-transit"
                    },
                    {
                        "value": "DAMAGED_IN_TRANSIT",
                        "description": "Shipment was received in damaged condition"
                    },
                    {
                        "value": "DELIVERED_NOT_RECEIVED",
                        "description": "Shipment was delivered but is not received"
                    },
                    {
                        "value": "ITEM_MISSING_SWITCHEROO",
                        "description": "Shipment was delivered but the content is missing/different"
                    },
                    {
                        "value": "COD_ABUSE",
                        "description": "Cash was collected from customer but delivery agent marked it rejected"
                    }
                ]
            },
            "ClaimProofURLs": {
                "type": "array",
                "description": "A list of proof URLs for a claim. Basic URL validation will happen for each URLs present in the list",
                "items": {
                    "type": "string"
                }
            },
            "SettlementType": {
                "type": "string",
                "description": "Type of settlement the shipper wants to receive for a particular shipment.",
                "default": "REFUND",
                "enum": [
                    "REFUND",
                    "CERTIFICATE_OF_FACT"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "REFUND",
                        "description": "File a claim for item value to get refund."
                    },
                    {
                        "value": "CERTIFICATE_OF_FACT",
                        "description": "File a claim to request for a COF[Certificate Of Fact]."
                    }
                ]
            },
            "GetRatesResult": {
                "required": [
                    "rates",
                    "requestToken"
                ],
                "type": "object",
                "properties": {
                    "requestToken": {
                        "$ref": "#/components/schemas/RequestToken"
                    },
                    "rates": {
                        "$ref": "#/components/schemas/RateList"
                    },
                    "ineligibleRates": {
                        "$ref": "#/components/schemas/IneligibleRateList"
                    }
                },
                "description": "The payload for the getRates operation."
            },
            "GetRatesResponse": {
                "type": "object",
                "properties": {
                    "payload": {
                        "$ref": "#/components/schemas/GetRatesResult"
                    }
                },
                "description": "The response schema for the getRates operation."
            },
            "DirectPurchaseRequest": {
                "required": [
                    "channelDetails"
                ],
                "type": "object",
                "properties": {
                    "shipTo": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "shipFrom": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "returnTo": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "packages": {
                        "$ref": "#/components/schemas/PackageList"
                    },
                    "channelDetails": {
                        "$ref": "#/components/schemas/ChannelDetails"
                    },
                    "labelSpecifications": {
                        "$ref": "#/components/schemas/RequestedDocumentSpecification"
                    }
                },
                "description": "The request schema for the directPurchaseShipment operation. When the channel type is Amazon, the shipTo address is not required and will be ignored."
            },
            "DirectPurchaseResult": {
                "required": [
                    "shipmentId"
                ],
                "type": "object",
                "properties": {
                    "shipmentId": {
                        "$ref": "#/components/schemas/ShipmentId"
                    },
                    "packageDocumentDetailList": {
                        "$ref": "#/components/schemas/PackageDocumentDetailList"
                    }
                },
                "description": "The payload for the directPurchaseShipment operation."
            },
            "DirectPurchaseResponse": {
                "type": "object",
                "properties": {
                    "payload": {
                        "$ref": "#/components/schemas/DirectPurchaseResult"
                    }
                },
                "description": "The response schema for the directPurchaseShipment operation."
            },
            "GetShipmentDocumentsResult": {
                "required": [
                    "packageDocumentDetail",
                    "shipmentId"
                ],
                "type": "object",
                "properties": {
                    "shipmentId": {
                        "$ref": "#/components/schemas/ShipmentId"
                    },
                    "packageDocumentDetail": {
                        "$ref": "#/components/schemas/PackageDocumentDetail"
                    },
                    "benefits": {
                        "$ref": "#/components/schemas/Benefits"
                    }
                },
                "description": "The payload for the getShipmentDocuments operation."
            },
            "GetShipmentDocumentsResponse": {
                "type": "object",
                "properties": {
                    "payload": {
                        "$ref": "#/components/schemas/GetShipmentDocumentsResult"
                    }
                },
                "description": "The response schema for the the getShipmentDocuments operation."
            },
            "GetTrackingResult": {
                "required": [
                    "alternateLegTrackingId",
                    "eventHistory",
                    "promisedDeliveryDate",
                    "summary",
                    "trackingId"
                ],
                "type": "object",
                "properties": {
                    "trackingId": {
                        "$ref": "#/components/schemas/TrackingId"
                    },
                    "alternateLegTrackingId": {
                        "$ref": "#/components/schemas/AlternateLegTrackingId"
                    },
                    "eventHistory": {
                        "type": "array",
                        "description": "A list of tracking events.",
                        "items": {
                            "$ref": "#/components/schemas/Event"
                        }
                    },
                    "promisedDeliveryDate": {
                        "type": "string",
                        "description": "The date and time by which the shipment is promised to be delivered.",
                        "format": "date-time"
                    },
                    "summary": {
                        "$ref": "#/components/schemas/TrackingSummary"
                    }
                },
                "description": "The payload for the getTracking operation."
            },
            "SubmitNdrFeedbackRequest": {
                "required": [
                    "ndrAction",
                    "trackingId"
                ],
                "type": "object",
                "properties": {
                    "trackingId": {
                        "$ref": "#/components/schemas/TrackingId"
                    },
                    "ndrAction": {
                        "$ref": "#/components/schemas/NdrAction"
                    },
                    "ndrRequestData": {
                        "$ref": "#/components/schemas/NdrRequestData"
                    }
                },
                "description": "The request schema for the NdrFeedback operation"
            },
            "CreateClaimRequest": {
                "required": [
                    "claimReason",
                    "settlementType",
                    "trackingId"
                ],
                "type": "object",
                "properties": {
                    "trackingId": {
                        "$ref": "#/components/schemas/TrackingId"
                    },
                    "declaredValue": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "claimReason": {
                        "$ref": "#/components/schemas/ClaimReason"
                    },
                    "isReplacementPackageSent": {
                        "type": "boolean",
                        "description": "Applicable for only On Amazon shipments to identify if replacement was sent"
                    },
                    "proofs": {
                        "$ref": "#/components/schemas/ClaimProofURLs"
                    },
                    "settlementType": {
                        "$ref": "#/components/schemas/SettlementType"
                    }
                },
                "description": "The request schema for the CreateClaim operation"
            },
            "GetTrackingResponse": {
                "type": "object",
                "properties": {
                    "payload": {
                        "$ref": "#/components/schemas/GetTrackingResult"
                    }
                },
                "description": "The response schema for the getTracking operation."
            },
            "CreateClaimResponse": {
                "type": "object",
                "properties": {
                    "claimId": {
                        "$ref": "#/components/schemas/ClaimId"
                    }
                },
                "description": "The response schema for the createClaim operation."
            },
            "PurchaseShipmentRequest": {
                "required": [
                    "rateId",
                    "requestToken",
                    "requestedDocumentSpecification"
                ],
                "type": "object",
                "properties": {
                    "requestToken": {
                        "$ref": "#/components/schemas/RequestToken"
                    },
                    "rateId": {
                        "$ref": "#/components/schemas/RateId"
                    },
                    "requestedDocumentSpecification": {
                        "$ref": "#/components/schemas/RequestedDocumentSpecification"
                    },
                    "requestedValueAddedServices": {
                        "$ref": "#/components/schemas/RequestedValueAddedServiceList"
                    },
                    "additionalInputs": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "object"
                        },
                        "description": "The additional inputs required to purchase a shipping offering, in JSON format. The JSON provided here must adhere to the JSON schema that is returned in the response to the getAdditionalInputs operation.\n\nAdditional inputs are only required when indicated by the requiresAdditionalInputs property in the response to the getRates operation."
                    }
                },
                "description": "The request schema for the purchaseShipment operation."
            },
            "PurchaseShipmentResult": {
                "required": [
                    "packageDocumentDetails",
                    "promise",
                    "shipmentId"
                ],
                "type": "object",
                "properties": {
                    "shipmentId": {
                        "$ref": "#/components/schemas/ShipmentId"
                    },
                    "packageDocumentDetails": {
                        "$ref": "#/components/schemas/PackageDocumentDetailList"
                    },
                    "promise": {
                        "$ref": "#/components/schemas/Promise"
                    },
                    "benefits": {
                        "$ref": "#/components/schemas/Benefits"
                    }
                },
                "description": "The payload for the purchaseShipment operation."
            },
            "PurchaseShipmentResponse": {
                "type": "object",
                "properties": {
                    "payload": {
                        "$ref": "#/components/schemas/PurchaseShipmentResult"
                    }
                },
                "description": "The response schema for the purchaseShipment operation."
            },
            "OneClickShipmentRequest": {
                "required": [
                    "channelDetails",
                    "labelSpecifications",
                    "packages",
                    "serviceSelection",
                    "shipFrom"
                ],
                "type": "object",
                "properties": {
                    "shipTo": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "shipFrom": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "returnTo": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "shipDate": {
                        "type": "string",
                        "description": "The ship date and time (the requested pickup). This defaults to the current date and time.",
                        "format": "date-time"
                    },
                    "goodsOwner": {
                        "$ref": "#/components/schemas/GoodsOwner"
                    },
                    "packages": {
                        "$ref": "#/components/schemas/PackageList"
                    },
                    "valueAddedServicesDetails": {
                        "$ref": "#/components/schemas/OneClickShipmentValueAddedServiceDetails"
                    },
                    "taxDetails": {
                        "$ref": "#/components/schemas/TaxDetailList"
                    },
                    "channelDetails": {
                        "$ref": "#/components/schemas/ChannelDetails"
                    },
                    "labelSpecifications": {
                        "$ref": "#/components/schemas/RequestedDocumentSpecification"
                    },
                    "serviceSelection": {
                        "$ref": "#/components/schemas/ServiceSelection"
                    },
                    "shipperInstruction": {
                        "$ref": "#/components/schemas/ShipperInstruction"
                    },
                    "destinationAccessPointDetails": {
                        "$ref": "#/components/schemas/AccessPointDetails"
                    }
                },
                "description": "The request schema for the OneClickShipment operation. When the channelType is not Amazon, shipTo is required and when channelType is Amazon shipTo is ignored."
            },
            "OneClickShipmentResponse": {
                "type": "object",
                "properties": {
                    "payload": {
                        "$ref": "#/components/schemas/OneClickShipmentResult"
                    }
                },
                "description": "The response schema for the OneClickShipment operation."
            },
            "OneClickShipmentResult": {
                "required": [
                    "carrier",
                    "packageDocumentDetails",
                    "promise",
                    "service",
                    "shipmentId",
                    "totalCharge"
                ],
                "type": "object",
                "properties": {
                    "shipmentId": {
                        "$ref": "#/components/schemas/ShipmentId"
                    },
                    "packageDocumentDetails": {
                        "$ref": "#/components/schemas/PackageDocumentDetailList"
                    },
                    "promise": {
                        "$ref": "#/components/schemas/Promise"
                    },
                    "carrier": {
                        "$ref": "#/components/schemas/Carrier"
                    },
                    "service": {
                        "$ref": "#/components/schemas/Service"
                    },
                    "totalCharge": {
                        "$ref": "#/components/schemas/Currency"
                    }
                },
                "description": "The payload for the OneClickShipment API."
            },
            "GetAccessPointsResponse": {
                "type": "object",
                "properties": {
                    "payload": {
                        "$ref": "#/components/schemas/GetAccessPointsResult"
                    }
                },
                "description": "The response schema for the GetAccessPoints operation."
            },
            "GetAccessPointsResult": {
                "required": [
                    "accessPointsMap"
                ],
                "type": "object",
                "properties": {
                    "accessPointsMap": {
                        "$ref": "#/components/schemas/AccessPointsMap"
                    }
                },
                "description": "The payload for the GetAccessPoints API."
            },
            "AccessPointType": {
                "type": "string",
                "description": "The type of access point, like counter (HELIX), lockers, etc.",
                "enum": [
                    "HELIX",
                    "CAMPUS_LOCKER",
                    "OMNI_LOCKER",
                    "ODIN_LOCKER",
                    "DOBBY_LOCKER",
                    "CORE_LOCKER",
                    "3P",
                    "CAMPUS_ROOM"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "HELIX",
                        "description": "Counter, aka Helix, is an assisted access point where customers interact with a store associate to collect or return packages. Counter stores do not have Locker"
                    },
                    {
                        "value": "CAMPUS_LOCKER",
                        "description": "It denotes a physical Locker present at Locker+ stores"
                    },
                    {
                        "value": "OMNI_LOCKER",
                        "description": "Omni lockers are similar to core lockers installed at apartment buildings. Core and Omni will have common base hardware platform"
                    },
                    {
                        "value": "ODIN_LOCKER",
                        "description": "Odin lockers rely on Bluetooth connection as there is no screen or scanner on the locker. Drivers, customers, and even technicians can interact with the locker using an app (different depending on the user)."
                    },
                    {
                        "value": "DOBBY_LOCKER",
                        "description": "Dobby lockers are Odin lockers installed at apartment complexes and available only to residents."
                    },
                    {
                        "value": "CORE_LOCKER",
                        "description": "Core lockers are the traditional and initial style of lockers when Hub was launched. Core lockers have a screen, keypad and scanner.  Customer either enter their pickup code using the Locker screen or scan pickup code barcode to pick up their package."
                    },
                    {
                        "value": "3P",
                        "description": "Networks that are owned end-to-end by commercial carriers (CC - e.g. DHL, UPS, DPD and Postal organizations), who operate both the transportation leg and the access point aspect. These networks offer a range of pickup points including: 3P Lockers, legacy Postal Offices, 3P Counters (e.g. Gas Stations and Retail Outlets - supermarkets, bookstores, news-stands etc)."
                    },
                    {
                        "value": "CAMPUS_ROOM",
                        "description": "Locker+, formerly known as Campus, are attended, physical stores, where the Locker is used dynamically by the staff to keep packages ready for customer pickup. Locker+ store can have multiple Lockers installed,"
                    }
                ]
            },
            "AccessPointsMap": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/AccessPointList"
                },
                "description": "Map of type of access point to list of access points"
            },
            "AccessPointList": {
                "type": "array",
                "description": "List of relevant Access points requested by shipper. These access points are sorted by proximity to postal code, and are limited to 40. We have internally defined a radius value to render relevant results.",
                "items": {
                    "$ref": "#/components/schemas/AccessPoint"
                }
            },
            "AccessPointId": {
                "type": "string",
                "description": "Unique identifier for the access point"
            },
            "AccessPoint": {
                "type": "object",
                "properties": {
                    "accessPointId": {
                        "$ref": "#/components/schemas/AccessPointId"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of entity (store/hub etc) where this access point is located"
                    },
                    "timezone": {
                        "type": "string",
                        "description": "Timezone of access point"
                    },
                    "type": {
                        "$ref": "#/components/schemas/AccessPointType"
                    },
                    "accessibilityAttributes": {
                        "$ref": "#/components/schemas/AccessibilityAttributes"
                    },
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "exceptionOperatingHours": {
                        "type": "array",
                        "description": "Exception operating hours for Access Point",
                        "items": {
                            "$ref": "#/components/schemas/ExceptionOperatingHours"
                        }
                    },
                    "assistanceType": {
                        "type": "string",
                        "description": "Assistance type enum for Access point i.e. STAFF_ASSISTED or SELF_ASSISTED",
                        "enum": [
                            "STAFF_ASSISTED",
                            "SELF_ASSISTED"
                        ]
                    },
                    "score": {
                        "type": "string",
                        "description": "The score of access point, based on proximity to postal code and sorting preference. This can be used to sort access point results on shipper's end."
                    },
                    "standardOperatingHours": {
                        "$ref": "#/components/schemas/DayOfWeekTimeMap"
                    }
                },
                "description": "Access point details"
            },
            "AccessibilityAttributes": {
                "type": "object",
                "properties": {
                    "distance": {
                        "type": "string",
                        "description": "The approximate distance of access point from input postalCode's centroid."
                    },
                    "driveTime": {
                        "type": "integer",
                        "description": "The approximate (static) drive time from input postal code's centroid."
                    }
                },
                "description": "Defines the accessibility details of the access point."
            },
            "OperatingHours": {
                "type": "object",
                "properties": {
                    "closingTime": {
                        "$ref": "#/components/schemas/TimeOfDay"
                    },
                    "openingTime": {
                        "$ref": "#/components/schemas/TimeOfDay"
                    },
                    "midDayClosures": {
                        "type": "array",
                        "description": "midDayClosures operating hours array",
                        "items": {
                            "$ref": "#/components/schemas/TimeOfDay"
                        }
                    }
                },
                "description": "The hours in which the access point shall remain operational"
            },
            "TimeOfDay": {
                "type": "object",
                "properties": {
                    "hourOfDay": {
                        "type": "integer",
                        "description": "Denotes hour of the day, used for defining opening or closing time of access points"
                    },
                    "minuteOfHour": {
                        "type": "integer",
                        "description": "Denotes minute of the hour, used for defining opening or closing time of access points"
                    },
                    "secondOfMinute": {
                        "type": "integer",
                        "description": "Denotes second of the minute, used for defining opening or closing time of access points"
                    }
                },
                "description": "Denotes time of the day, used for defining opening or closing time of access points"
            },
            "DayOfWeekTimeMap": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/components/schemas/OperatingHours"
                },
                "description": "Map of day of the week to operating hours of that day"
            },
            "ExceptionOperatingHours": {
                "type": "object",
                "properties": {
                    "dateRange": {
                        "$ref": "#/components/schemas/DateRange"
                    },
                    "operatingHours": {
                        "$ref": "#/components/schemas/OperatingHours"
                    }
                },
                "description": "Defines exceptions to standard operating hours for certain date ranges."
            },
            "GetAdditionalInputsResult": {
                "type": "object",
                "additionalProperties": {
                    "type": "object"
                },
                "description": "The JSON schema to use to provide additional inputs when required to purchase a shipping offering."
            },
            "GetAdditionalInputsResponse": {
                "type": "object",
                "properties": {
                    "payload": {
                        "$ref": "#/components/schemas/GetAdditionalInputsResult"
                    }
                },
                "description": "The response schema for the getAdditionalInputs operation."
            },
            "GetCarrierAccountsRequest": {
                "type": "object",
                "properties": {
                    "clientReferenceDetails": {
                        "$ref": "#/components/schemas/ClientReferenceDetails"
                    }
                },
                "description": "The request schema for the GetCarrierAccounts operation."
            },
            "LinkCarrierAccountRequest": {
                "required": [
                    "carrierAccountAttributes",
                    "carrierAccountType"
                ],
                "type": "object",
                "properties": {
                    "clientReferenceDetails": {
                        "$ref": "#/components/schemas/ClientReferenceDetails"
                    },
                    "carrierAccountType": {
                        "$ref": "#/components/schemas/CarrierAccountType"
                    },
                    "carrierAccountAttributes": {
                        "$ref": "#/components/schemas/CarrierAccountAttributes"
                    },
                    "encryptedCarrierAccountAttributes": {
                        "$ref": "#/components/schemas/CarrierAccountAttributes"
                    }
                },
                "description": "The request schema for verify and add the merchant's account with a certain carrier."
            },
            "UnlinkCarrierAccountRequest": {
                "type": "object",
                "properties": {
                    "clientReferenceDetails": {
                        "$ref": "#/components/schemas/ClientReferenceDetails"
                    },
                    "accountId": {
                        "$ref": "#/components/schemas/AccountId"
                    }
                },
                "description": "The request schema for remove the Carrier Account associated with the provided merchant."
            },
            "GenerateCollectionFormRequest": {
                "required": [
                    "carrierId"
                ],
                "type": "object",
                "properties": {
                    "clientReferenceDetails": {
                        "$ref": "#/components/schemas/ClientReferenceDetails"
                    },
                    "carrierId": {
                        "$ref": "#/components/schemas/CarrierId"
                    },
                    "shipFromAddress": {
                        "$ref": "#/components/schemas/Address"
                    }
                },
                "description": "The request schema Call to generate the collection form."
            },
            "GetCollectionFormHistoryRequest": {
                "type": "object",
                "properties": {
                    "clientReferenceDetails": {
                        "$ref": "#/components/schemas/ClientReferenceDetails"
                    },
                    "maxResults": {
                        "type": "integer",
                        "description": "max Number of Results for query ."
                    },
                    "carrierId": {
                        "$ref": "#/components/schemas/CarrierId"
                    },
                    "shipFromAddress": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "dateRange": {
                        "$ref": "#/components/schemas/DateRange"
                    }
                },
                "description": "The request schema to get query collections form history API ."
            },
            "GetUnmanifestedShipmentsRequest": {
                "type": "object",
                "properties": {
                    "clientReferenceDetails": {
                        "$ref": "#/components/schemas/ClientReferenceDetails"
                    }
                },
                "description": "The request schema for the GetUnmanifestedShipmentsRequest operation."
            },
            "GetCarrierAccountFormInputsResponse": {
                "type": "object",
                "properties": {
                    "linkableCarriersList": {
                        "$ref": "#/components/schemas/LinkableCarriersList"
                    }
                },
                "description": "The Response  for the GetCarrierAccountFormInputsResponse operation."
            },
            "GetCarrierAccountsResponse": {
                "required": [
                    "activeAccounts"
                ],
                "type": "object",
                "properties": {
                    "activeAccounts": {
                        "$ref": "#/components/schemas/ActiveAccounts"
                    }
                },
                "description": "The Response  for the GetCarrierAccountsResponse operation."
            },
            "LinkCarrierAccountResponse": {
                "type": "object",
                "properties": {
                    "registrationStatus": {
                        "$ref": "#/components/schemas/AccountStatus"
                    },
                    "accountId": {
                        "$ref": "#/components/schemas/AccountId"
                    }
                },
                "description": "The Response  for the LinkCarrierAccount operation."
            },
            "UnlinkCarrierAccountResponse": {
                "type": "object",
                "properties": {
                    "isUnlinked": {
                        "type": "boolean",
                        "description": "Is Carrier unlinked from Merchant"
                    }
                },
                "description": "The Response  for the UnlinkCarrierAccountResponse operation."
            },
            "GenerateCollectionFormResponse": {
                "type": "object",
                "properties": {
                    "collectionsFormDocument": {
                        "$ref": "#/components/schemas/CollectionsFormDocument"
                    }
                },
                "description": "The Response  for the GenerateCollectionFormResponse operation."
            },
            "GetCollectionFormHistoryResponse": {
                "type": "object",
                "properties": {
                    "collectionFormsHistoryRecordList": {
                        "$ref": "#/components/schemas/CollectionFormsHistoryRecordList"
                    },
                    "lastRefreshedDate": {
                        "type": "string",
                        "description": "Last Refereshed Date of collection"
                    }
                },
                "description": "The Response  for the GetCollectionFormHistoryResponse operation."
            },
            "GetUnmanifestedShipmentsResponse": {
                "type": "object",
                "properties": {
                    "unmanifestedCarrierInformationList": {
                        "$ref": "#/components/schemas/UnmanifestedCarrierInformationList"
                    }
                },
                "description": "The Response  for the GetUnmanifestedShipmentsResponse operation."
            },
            "GetCollectionFormResponse": {
                "type": "object",
                "properties": {
                    "collectionsFormDocument": {
                        "$ref": "#/components/schemas/CollectionsFormDocument"
                    }
                },
                "description": "The Response  for the GetCollectionFormResponse operation."
            },
            "ClientReferenceDetails": {
                "type": "array",
                "description": "Object to pass additional information about the MCI Integrator shipperType: List of ClientReferenceDetail",
                "items": {
                    "$ref": "#/components/schemas/ClientReferenceDetail"
                }
            },
            "ClientReferenceDetail": {
                "required": [
                    "clientReferenceId",
                    "clientReferenceType"
                ],
                "type": "object",
                "properties": {
                    "clientReferenceType": {
                        "type": "string",
                        "description": "Client Reference type.",
                        "enum": [
                            "IntegratorShipperId",
                            "IntegratorMerchantId"
                        ],
                        "x-docgen-enum-table-extension": [
                            {
                                "value": "IntegratorShipperId",
                                "description": "The unique identifier assigned to a 3P seller by the shipping integrator."
                            },
                            {
                                "value": "IntegratorMerchantId",
                                "description": "The unique identifier assigned to a 3P shipping integrator by Amazon."
                            }
                        ]
                    },
                    "clientReferenceId": {
                        "type": "string",
                        "description": "The Client Reference Id."
                    }
                },
                "description": "Client Reference Details"
            },
            "CollectionFormId": {
                "type": "string",
                "description": "Collection Form Id for Reprint ."
            },
            "ShipmentType": {
                "type": "string",
                "description": "Shipment type.",
                "enum": [
                    "FORWARD",
                    "RETURNS"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "FORWARD",
                        "description": "Additional information about shipment representing package journey from origin address to destination address in the transportation/shipping request."
                    },
                    {
                        "value": "RETURNS",
                        "description": "Additional information about shipment representing package journey from destination address to origin/return address in the original transportation/shipping request."
                    }
                ]
            },
            "CarrierAccounts": {
                "type": "array",
                "description": "A list of CarrierAccounts",
                "items": {
                    "$ref": "#/components/schemas/CarrierAccount"
                }
            },
            "CarrierAccount": {
                "required": [
                    "carrierAccountId",
                    "carrierId"
                ],
                "type": "object",
                "properties": {
                    "carrierAccountId": {
                        "$ref": "#/components/schemas/AccountId"
                    },
                    "carrierId": {
                        "$ref": "#/components/schemas/CarrierId"
                    }
                },
                "description": "Carrier Account details used to fetch rates."
            },
            "ActiveAccounts": {
                "type": "array",
                "description": "A list of ActiveAccount",
                "items": {
                    "$ref": "#/components/schemas/ActiveAccount"
                }
            },
            "ActiveAccount": {
                "type": "object",
                "properties": {
                    "accountId": {
                        "$ref": "#/components/schemas/AccountId"
                    },
                    "carrierId": {
                        "$ref": "#/components/schemas/CarrierId"
                    }
                },
                "description": "Active Account Details"
            },
            "DateRange": {
                "type": "object",
                "properties": {
                    "startDate": {
                        "type": "string",
                        "description": "Start Date for query .",
                        "format": "dateTime"
                    },
                    "endDate": {
                        "type": "string",
                        "description": "end date for query.",
                        "format": "dateTime"
                    }
                },
                "description": "Date Range for query the results."
            },
            "CarrierAccountAttributes": {
                "type": "array",
                "description": "A list of all attributes required by the carrier in order to successfully link the merchant's account",
                "items": {
                    "$ref": "#/components/schemas/CarrierAccountAttribute"
                }
            },
            "CarrierAccountAttribute": {
                "type": "object",
                "properties": {
                    "attributeName": {
                        "type": "string",
                        "description": "Attribute Name ."
                    },
                    "propertyGroup": {
                        "type": "string",
                        "description": "Property Group."
                    },
                    "value": {
                        "type": "string",
                        "description": "Value ."
                    }
                },
                "description": "Attribute Properties required by carrier"
            },
            "CarrierAccountType": {
                "type": "string",
                "description": "CarrierAccountType  associated with account."
            },
            "MerchantId": {
                "type": "string",
                "description": "merchant Id of provided merchant "
            },
            "AccountStatus": {
                "type": "string",
                "description": "Account Status.",
                "enum": [
                    "ACTIVE",
                    "INACTIVE",
                    "PENDING",
                    "SUSPENDED"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "ACTIVE",
                        "description": "Seller Account is Active."
                    },
                    {
                        "value": "INACTIVE",
                        "description": "Seller Account is InActive."
                    },
                    {
                        "value": "PENDING",
                        "description": "Seller Account is Pending."
                    },
                    {
                        "value": "SUSPENDED",
                        "description": "Seller Account is Suspended."
                    }
                ]
            },
            "CollectionsFormDocument": {
                "type": "object",
                "properties": {
                    "base64EncodedContent": {
                        "type": "string",
                        "description": "Base64 document Value of Collection."
                    },
                    "documentFormat": {
                        "type": "string",
                        "description": "Collection Document format is PDF.",
                        "format": "application/pdf"
                    }
                },
                "description": "Collection Form Document Details"
            },
            "CollectionFormsHistoryRecordList": {
                "type": "array",
                "description": "A list of CollectionFormsHistoryRecord",
                "items": {
                    "$ref": "#/components/schemas/CollectionFormsHistoryRecord"
                }
            },
            "CollectionFormsHistoryRecord": {
                "type": "object",
                "properties": {
                    "carrierName": {
                        "$ref": "#/components/schemas/CarrierName"
                    },
                    "creationDate": {
                        "type": "string",
                        "description": "Creation Time for this account.",
                        "format": "dateTime"
                    },
                    "generationStatus": {
                        "$ref": "#/components/schemas/GenerationStatus"
                    },
                    "collectionFormId": {
                        "$ref": "#/components/schemas/CollectionFormId"
                    },
                    "shipFromAddress": {
                        "$ref": "#/components/schemas/Address"
                    }
                },
                "description": "Active Account Details"
            },
            "UnmanifestedCarrierInformationList": {
                "type": "array",
                "description": "A list of UnmanifestedCarrierInformation",
                "items": {
                    "$ref": "#/components/schemas/UnmanifestedCarrierInformation"
                }
            },
            "UnmanifestedCarrierInformation": {
                "type": "object",
                "properties": {
                    "carrierId": {
                        "$ref": "#/components/schemas/CarrierId"
                    },
                    "carrierName": {
                        "$ref": "#/components/schemas/CarrierName"
                    },
                    "unmanifestedShipmentLocationList": {
                        "$ref": "#/components/schemas/UnmanifestedShipmentLocationList"
                    }
                },
                "description": "UnmanifestedCarrierInformation like carrierId CarrierName and Location"
            },
            "UnmanifestedShipmentLocationList": {
                "type": "array",
                "description": "A list of UnmanifestedShipmentLocation",
                "items": {
                    "$ref": "#/components/schemas/UnmanifestedShipmentLocation"
                }
            },
            "UnmanifestedShipmentLocation": {
                "type": "object",
                "properties": {
                    "address": {
                        "$ref": "#/components/schemas/Address"
                    },
                    "lastManifestDate": {
                        "type": "string",
                        "description": "Its Last Manifest Date.",
                        "format": "dateTime"
                    }
                },
                "description": "UnmanifestedShipmentLocation info "
            },
            "LinkableCarriersList": {
                "type": "array",
                "description": "A list of LinkableCarrier",
                "items": {
                    "$ref": "#/components/schemas/LinkableCarrier"
                }
            },
            "LinkableCarrier": {
                "type": "object",
                "properties": {
                    "carrierId": {
                        "$ref": "#/components/schemas/CarrierId"
                    },
                    "linkableAccountTypes": {
                        "$ref": "#/components/schemas/LinkableAccountTypeList"
                    }
                },
                "description": "Info About Linkable Carrier"
            },
            "LinkableAccountTypeList": {
                "type": "array",
                "description": "A list of LinkableAccountType",
                "items": {
                    "$ref": "#/components/schemas/LinkableAccountType"
                }
            },
            "LinkableAccountType": {
                "type": "object",
                "properties": {
                    "accountType": {
                        "$ref": "#/components/schemas/AccountType"
                    },
                    "carrierAccountInputs": {
                        "$ref": "#/components/schemas/CarrierAccountInputsList"
                    }
                },
                "description": "Info About Linkable Account Type"
            },
            "CarrierAccountInputsList": {
                "type": "array",
                "description": "A list of CarrierAccountInput",
                "items": {
                    "$ref": "#/components/schemas/CarrierAccountInput"
                }
            },
            "CarrierAccountInput": {
                "type": "object",
                "properties": {
                    "descriptionLocalizationKey": {
                        "type": "string",
                        "description": "descriptionLocalizationKey value ."
                    },
                    "name": {
                        "type": "string",
                        "description": "name value ."
                    },
                    "groupName": {
                        "type": "string",
                        "description": "groupName value ."
                    },
                    "inputType": {
                        "$ref": "#/components/schemas/InputType"
                    },
                    "isMandatory": {
                        "type": "boolean",
                        "description": "mandatory or not  value ."
                    },
                    "isConfidential": {
                        "type": "boolean",
                        "description": "is value is Confidential ."
                    },
                    "isHidden": {
                        "type": "boolean",
                        "description": "is value is hidden ."
                    },
                    "validationMetadata": {
                        "$ref": "#/components/schemas/ValidationMetadataList"
                    }
                },
                "description": "Info About CarrierAccountInput"
            },
            "ValidationMetadataList": {
                "type": "array",
                "description": "A list of ValidationMetadata",
                "items": {
                    "$ref": "#/components/schemas/ValidationMetadata"
                }
            },
            "ValidationMetadata": {
                "type": "object",
                "properties": {
                    "errorMessage": {
                        "type": "string",
                        "description": "errorMessage for the error."
                    },
                    "validationStrategy": {
                        "type": "string",
                        "description": "validationStrategy for the error."
                    },
                    "value": {
                        "type": "string",
                        "description": "Value."
                    }
                },
                "description": "ValidationMetadata Details"
            },
            "GenerationStatus": {
                "type": "string",
                "description": "Generation Status.",
                "enum": [
                    "Completed",
                    "InProgress"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "Completed",
                        "description": "Genertaion is succesfully completed ."
                    },
                    {
                        "value": "InProgress",
                        "description": "Genertaion is in Progress."
                    }
                ]
            },
            "AccountType": {
                "type": "string",
                "description": "Shipper Account Type.",
                "enum": [
                    "SHIPPER_ACCOUNT",
                    "SHIPPER_ACCOUNT_WITH_INVOICE",
                    "AMAZON_ACCOUNT"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "SHIPPER_ACCOUNT",
                        "description": "Shipper Account in case of others carriers like : FEDEX, ROYLA_MAIL, DHL etc."
                    },
                    {
                        "value": "SHIPPER_ACCOUNT_WITH_INVOICE",
                        "description": "Shipper Account only for UPS ."
                    },
                    {
                        "value": "AMAZON_ACCOUNT",
                        "description": "this for default account and will be used if seller dont have any active linked account."
                    }
                ]
            },
            "InputType": {
                "type": "string",
                "description": "Type of Input.",
                "enum": [
                    "TEXTBOX",
                    "PASSWORD"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "TEXTBOX",
                        "description": "Input Type is Textbox."
                    },
                    {
                        "value": "PASSWORD",
                        "description": "Input Type is Password."
                    }
                ]
            },
            "PaymentType": {
                "type": "string",
                "description": "Payment type of the purchase.",
                "enum": [
                    "PAY_THROUGH_AMAZON",
                    "PAY_DIRECT_TO_CARRIER"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "PAY_THROUGH_AMAZON",
                        "description": "Payment Through Amazon."
                    },
                    {
                        "value": "PAY_DIRECT_TO_CARRIER",
                        "description": "Payment Direct to Carrier."
                    }
                ]
            },
            "RateItemList": {
                "type": "array",
                "description": "A list of RateItem",
                "items": {
                    "$ref": "#/components/schemas/RateItem"
                }
            },
            "RateItem": {
                "type": "object",
                "properties": {
                    "rateItemID": {
                        "$ref": "#/components/schemas/RateItemID"
                    },
                    "rateItemType": {
                        "$ref": "#/components/schemas/RateItemType"
                    },
                    "rateItemCharge": {
                        "$ref": "#/components/schemas/Currency"
                    },
                    "rateItemNameLocalization": {
                        "type": "string",
                        "description": "Used for the localization."
                    }
                },
                "description": "Rate Item for shipping (base cost, transaction fee, confirmation, insurance, etc.) Data source definition: "
            },
            "RateItemID": {
                "type": "string",
                "description": "Unique ID for the rateItem.",
                "enum": [
                    "BASE_RATE",
                    "TRANSACTION_FEE",
                    "ADULT_SIGNATURE_CONFIRMATION",
                    "SIGNATURE_CONFIRMATION",
                    "NO_CONFIRMATION",
                    "WAIVE_SIGNATURE",
                    "IMPLIED_LIABILITY",
                    "HIDDEN_POSTAGE",
                    "DECLARED_VALUE",
                    "SUNDAY_HOLIDAY_DELIVERY",
                    "DELIVERY_CONFIRMATION",
                    "IMPORT_DUTY_CHARGE",
                    "VAT",
                    "NO_SATURDAY_DELIVERY",
                    "INSURANCE",
                    "COD",
                    "FUEL_SURCHARGE",
                    "INSPECTION_CHARGE",
                    "DELIVERY_AREA_SURCHARGE",
                    "WAYBILL_CHARGE",
                    "AMAZON_SPONSORED_DISCOUNT",
                    "INTEGRATOR_SPONSORED_DISCOUNT",
                    "OVERSIZE_SURCHARGE",
                    "CONGESTION_CHARGE",
                    "RESIDENTIAL_SURCHARGE",
                    "ADDITIONAL_SURCHARGE",
                    "SURCHARGE",
                    "REBATE",
                    "HIGH_CUBE_SURCHARGE",
                    "HIGH_LENGTH_SURCHARGE",
                    "HIGH_WIDTH_SURCHARGE",
                    "DEMAND_SURCHARGE",
                    "NONSTANDARD_FEE"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "BASE_RATE",
                        "description": "for Base Rate."
                    },
                    {
                        "value": "TRANSACTION_FEE",
                        "description": "Charge for TransAction Fee."
                    },
                    {
                        "value": "ADULT_SIGNATURE_CONFIRMATION",
                        "description": "Charge for Adult Signature Confirmation."
                    },
                    {
                        "value": "SIGNATURE_CONFIRMATION",
                        "description": "Charge for signature confirmation."
                    },
                    {
                        "value": "NO_CONFIRMATION",
                        "description": "Charge for No Confirmation."
                    },
                    {
                        "value": "WAIVE_SIGNATURE",
                        "description": "Charge for Waive Signature."
                    },
                    {
                        "value": "IMPLIED_LIABILITY",
                        "description": "Charge for Implied Liability."
                    },
                    {
                        "value": "HIDDEN_POSTAGE",
                        "description": "Hidden Postage Charge."
                    },
                    {
                        "value": "DECLARED_VALUE",
                        "description": "Declared Valure Coverage Charge."
                    },
                    {
                        "value": "SUNDAY_HOLIDAY_DELIVERY",
                        "description": "Sunday Holiday Delivery Charge."
                    },
                    {
                        "value": "DELIVERY_CONFIRMATION",
                        "description": "Charge for Delivery Confirmation."
                    },
                    {
                        "value": "IMPORT_DUTY_CHARGE",
                        "description": "Import Duty Charge."
                    },
                    {
                        "value": "VAT",
                        "description": "Vat Charge."
                    },
                    {
                        "value": "NO_SATURDAY_DELIVERY",
                        "description": "Charge for No Satuarday Delivery."
                    },
                    {
                        "value": "INSURANCE",
                        "description": "Insurance Charge."
                    },
                    {
                        "value": "COD",
                        "description": "COD Charge."
                    },
                    {
                        "value": "AMAZON_SPONSORED_DISCOUNT",
                        "description": "Amazon Sponsored Discount."
                    },
                    {
                        "value": "INTEGRATOR_SPONSORED_DISCOUNT",
                        "description": "Integrator Sponsored Discount."
                    },
                    {
                        "value": "FUEL_SURCHARGE",
                        "description": "Fuel Surcharge."
                    },
                    {
                        "value": "INSPECTION_CHARGE",
                        "description": "Inspection Charge."
                    },
                    {
                        "value": "DELIVERY_AREA_SURCHARGE",
                        "description": "Delivery Area Surcharge."
                    },
                    {
                        "value": "WAYBILL_CHARGE",
                        "description": "WayBill Charge."
                    },
                    {
                        "value": "OVERSIZE_SURCHARGE",
                        "description": "OverSize Surcharge."
                    },
                    {
                        "value": "CONGESTION_CHARGE",
                        "description": "Congestion Charge."
                    },
                    {
                        "value": "RESIDENTIAL_SURCHARGE",
                        "description": "Residential Surcharge."
                    },
                    {
                        "value": "ADDITIONAL_SURCHARGE",
                        "description": "Additional Surcharge."
                    },
                    {
                        "value": "SURCHARGE",
                        "description": "Surcharge."
                    },
                    {
                        "value": "REBATE",
                        "description": "Rebate."
                    },
                    {
                        "value": "HIGH_CUBE_SURCHARGE",
                        "description": "High Cube Surcharge."
                    },
                    {
                        "value": "HIGH_LENGTH_SURCHARGE",
                        "description": "High Length Surcharge."
                    },
                    {
                        "value": "HIGH_WIDTH_SURCHARGE",
                        "description": "High Width Surcharge."
                    },
                    {
                        "value": "DEMAND_SURCHARGE",
                        "description": "A fee that is applied during specific periods of increased demand on the network as specified in the Amazon Shipping Service guide."
                    },
                    {
                        "value": "NONSTANDARD_FEE",
                        "description": "A fee that applies for packages that are outside the standard size for processing and sorting as specified in the Amazon Shipping Service guide."
                    }
                ]
            },
            "RateItemType": {
                "type": "string",
                "description": "Type of the rateItem.",
                "enum": [
                    "MANDATORY",
                    "OPTIONAL",
                    "INCLUDED"
                ],
                "x-docgen-enum-table-extension": [
                    {
                        "value": "MANDATORY",
                        "description": "Rate Item is mandatory."
                    },
                    {
                        "value": "OPTIONAL",
                        "description": "Rate Item is Optional."
                    },
                    {
                        "value": "INCLUDED",
                        "description": "Rate Item is included."
                    }
                ]
            },
            "Benefits": {
                "required": [
                    "excludedBenefits",
                    "includedBenefits"
                ],
                "type": "object",
                "properties": {
                    "includedBenefits": {
                        "$ref": "#/components/schemas/IncludedBenefits"
                    },
                    "excludedBenefits": {
                        "$ref": "#/components/schemas/ExcludedBenefits"
                    }
                },
                "description": "Benefits that are included and excluded for each shipping offer. Benefits represents services provided by Amazon (eg. CLAIMS_PROTECTED, etc.) when sellers purchase shipping through Amazon. Benefit details will be made available for any shipment placed on or after January 1st 2024 00:00 UTC."
            },
            "IncludedBenefits": {
                "type": "array",
                "description": "A list of included benefits.",
                "items": {
                    "type": "string"
                }
            },
            "ExcludedBenefits": {
                "type": "array",
                "description": "A list of excluded benefit. Refer to the ExcludeBenefit object for further documentation",
                "items": {
                    "$ref": "#/components/schemas/ExcludedBenefit"
                }
            },
            "ExcludedBenefit": {
                "required": [
                    "benefit"
                ],
                "type": "object",
                "properties": {
                    "benefit": {
                        "type": "string",
                        "description": "benefit"
                    },
                    "reasonCodes": {
                        "$ref": "#/components/schemas/ExcludedBenefitReasonCodes"
                    }
                },
                "description": "Object representing a benefit that is excluded for a shipping offer or rate."
            },
            "ExcludedBenefitReasonCodes": {
                "minItems": 1,
                "type": "array",
                "description": "List of reasons (eg. LATE_DELIVERY_RISK, etc.) indicating why a benefit is excluded for a shipping offer.",
                "items": {
                    "type": "string"
                }
            },
            "ServiceSelection": {
                "required": [
                    "serviceId"
                ],
                "type": "object",
                "properties": {
                    "serviceId": {
                        "$ref": "#/components/schemas/ServiceIds"
                    }
                },
                "description": "Service Selection Criteria."
            },
            "ServiceIds": {
                "type": "array",
                "description": "A list of ServiceId.",
                "items": {
                    "type": "string"
                }
            },
            "OneClickShipmentValueAddedServiceDetails": {
                "type": "array",
                "description": "The value-added services to be added to a shipping service purchase.",
                "items": {
                    "$ref": "#/components/schemas/OneClickShipmentValueAddedService"
                }
            },
            "OneClickShipmentValueAddedService": {
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The identifier of the selected value-added service."
                    },
                    "amount": {
                        "$ref": "#/components/schemas/Currency"
                    }
                },
                "description": "A value-added service to be applied to a shipping service purchase."
            },
            "Service": {
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/ServiceId"
                    },
                    "name": {
                        "$ref": "#/components/schemas/ServiceName"
                    }
                },
                "description": "Service Related Info"
            },
            "Carrier": {
                "required": [
                    "id",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "$ref": "#/components/schemas/CarrierId"
                    },
                    "name": {
                        "$ref": "#/components/schemas/CarrierName"
                    }
                },
                "description": "Carrier Related Info"
            }
        }
    },
    "x-original-swagger-version": "2.0"
}