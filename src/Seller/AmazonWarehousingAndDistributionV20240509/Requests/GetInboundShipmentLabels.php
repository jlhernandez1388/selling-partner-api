<?php

/**
 * This file is auto-generated by Saloon SDK Generator
 * Generator: SellingPartnerApi\Generator\Generators\RequestGenerator
 * Do not modify it directly.
 */

declare(strict_types=1);

namespace SellingPartnerApi\Seller\AmazonWarehousingAndDistributionV20240509\Requests;

use Exception;
use Saloon\Enums\Method;
use Saloon\Http\Response;
use SellingPartnerApi\Request;
use SellingPartnerApi\Seller\AmazonWarehousingAndDistributionV20240509\Responses\ErrorList;
use SellingPartnerApi\Seller\AmazonWarehousingAndDistributionV20240509\Responses\ShipmentLabels;

/**
 * getInboundShipmentLabels
 */
class GetInboundShipmentLabels extends Request
{
    protected Method $method = Method::GET;

    /**
     * @param  string  $shipmentId  ID for the shipment.
     * @param  ?string  $pageType  Page type for the generated labels. The default is `PLAIN_PAPER`.
     * @param  ?string  $formatType  The format type of the output file that contains your labels. The default format type is `PDF`.
     */
    public function __construct(
        protected string $shipmentId,
        protected ?string $pageType = null,
        protected ?string $formatType = null,
    ) {}

    public function resolveEndpoint(): string
    {
        return "/awd/2024-05-09/inboundShipments/{$this->shipmentId}/labels";
    }

    public function createDtoFromResponse(Response $response): ShipmentLabels|ErrorList
    {
        $status = $response->status();
        $responseCls = match ($status) {
            200 => ShipmentLabels::class,
            400, 403, 404, 413, 415, 429, 500, 503 => ErrorList::class,
            default => throw new Exception("Unhandled response status: {$status}")
        };

        return $responseCls::deserialize($response->json());
    }

    public function defaultQuery(): array
    {
        return array_filter(['pageType' => $this->pageType, 'formatType' => $this->formatType]);
    }
}
