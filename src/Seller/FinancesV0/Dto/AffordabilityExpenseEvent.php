<?php

/**
 * This file is auto-generated by Saloon SDK Generator
 * Generator: Crescat\SaloonSdkGenerator\Generators\DtoGenerator
 * Do not modify it directly.
 */

declare(strict_types=1);

namespace SellingPartnerApi\Seller\FinancesV0\Dto;

use SellingPartnerApi\Dto;

final class AffordabilityExpenseEvent extends Dto
{
    protected static array $attributeMap = [
        'taxTypeCgst' => 'TaxTypeCGST',
        'taxTypeSgst' => 'TaxTypeSGST',
        'taxTypeIgst' => 'TaxTypeIGST',
        'amazonOrderId' => 'AmazonOrderId',
        'postedDate' => 'PostedDate',
        'marketplaceId' => 'MarketplaceId',
        'transactionType' => 'TransactionType',
        'baseExpense' => 'BaseExpense',
        'totalExpense' => 'TotalExpense',
    ];

    /**
     * @param  Currency  $taxTypeCgst  A currency type and amount.
     * @param  Currency  $taxTypeSgst  A currency type and amount.
     * @param  Currency  $taxTypeIgst  A currency type and amount.
     * @param  ?string  $amazonOrderId  An Amazon-defined identifier for an order.
     * @param  ?\DateTimeInterface  $postedDate  Fields with a schema type of date are in ISO 8601 date time format (for example GroupBeginDate).
     * @param  ?string  $marketplaceId  An encrypted, Amazon-defined marketplace identifier.
     * @param  ?string  $transactionType  Indicates the type of transaction.
     *
     * Possible values:
     *
     * * Charge - For an affordability promotion expense.
     *
     * * Refund - For an affordability promotion expense reversal.
     * @param  ?Currency  $baseExpense  A currency type and amount.
     * @param  ?Currency  $totalExpense  A currency type and amount.
     */
    public function __construct(
        public Currency $taxTypeCgst,
        public Currency $taxTypeSgst,
        public Currency $taxTypeIgst,
        public ?string $amazonOrderId = null,
        public ?\DateTimeInterface $postedDate = null,
        public ?string $marketplaceId = null,
        public ?string $transactionType = null,
        public ?Currency $baseExpense = null,
        public ?Currency $totalExpense = null,
    ) {}
}
