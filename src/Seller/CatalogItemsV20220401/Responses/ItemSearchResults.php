<?php

/**
 * This file is auto-generated by Saloon SDK Generator
 * Generator: SellingPartnerApi\Generator\Generators\ResponseGenerator
 * Do not modify it directly.
 */

declare(strict_types=1);

namespace SellingPartnerApi\Seller\CatalogItemsV20220401\Responses;

use SellingPartnerApi\Response;
use SellingPartnerApi\Seller\CatalogItemsV20220401\Dto\Pagination;
use SellingPartnerApi\Seller\CatalogItemsV20220401\Dto\Refinements;

final class ItemSearchResults extends Response
{
    protected static array $complexArrayTypes = ['items' => Item::class];

    /**
     * @param  int  $numberOfResults  For searches that are based on `identifiers`, `numberOfResults` is the total number of Amazon catalog items found. For searches that are based on `keywords`, `numberOfResults` is the estimated total number of Amazon catalog items that are matched by the search query. Only results up to the page count limit are returned per request regardless of the number found.
     *
     * **Note:** The maximum number of items (ASINs) that can be returned and paged through is 1,000.
     * @param  Item[]  $items  A list of items from the Amazon catalog.
     * @param  ?Pagination  $pagination  Pagination occurs when a request produces a response that exceeds the `pageSize`. This means that the response is divided into individual pages. To retrieve the next page or the previous page of results, you must pass the `nextToken` value or the `previousToken` value as the `pageToken` parameter in the next request. There is no `nextToken` in the pagination object on the last page.
     * @param  ?Refinements  $refinements  Optional fields that you can use to refine your search results.
     */
    public function __construct(
        public readonly int $numberOfResults,
        public readonly array $items,
        public readonly ?Pagination $pagination = null,
        public readonly ?Refinements $refinements = null,
    ) {}
}
